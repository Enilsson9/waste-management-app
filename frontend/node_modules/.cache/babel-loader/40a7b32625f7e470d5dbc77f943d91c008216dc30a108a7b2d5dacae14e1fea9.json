{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      orders: [],\n      newOrder: {\n        typeOfWaste: '',\n        description: '',\n        quantity: 0\n      }\n      /*wasteTypes: [\n        { id: 1, name: 'Plastic' },\n        { id: 2, name: 'Metal' },\n        { id: 3, name: 'Cardboard' },\n        { id: 4, name: 'Bronze' },\n      ]*/\n    };\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await api.getAllOrders();\n        this.orders = response.data;\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    async addOrder() {\n      try {\n        const response = await api.addOrder(this.newOrder);\n        this.orders.push(response.data);\n        this.newOrder = {\n          name: '',\n          description: '',\n          quantity: 0\n        };\n      } catch (error) {\n        console.error('Error creating order:', error);\n      }\n    },\n    async deleteOrder(id) {\n      try {\n        await api.deleteOrder(id);\n        this.orders = this.orders.filter(order => order._id !== id);\n      } catch (error) {\n        console.error('Error deleting order:', error);\n      }\n    }\n  },\n  created() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["api","data","orders","newOrder","typeOfWaste","description","quantity","methods","fetchOrders","response","getAllOrders","error","console","addOrder","push","name","deleteOrder","id","filter","order","_id","created"],"sources":["/home/edward/summer-project/frontend/src/components/forms/orderForm.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"order in orders\" :key=\"order._id\">\n          {{ order.typeOfWaste }} - {{ order.weight }} - {{ order.createdAt }}\n          <button @click=\"deleteOrder(order._id)\">Delete</button>\n        </li>\n      </ul>\n      <form @submit.prevent=\"addOrder\">\n        \n        <select v-model=\"newOrder.typeOfWaste\">\n        <option v-for=\"waste in wasteTypes\" :key=\"waste.id\" :value=\"waste.name\">{{ waste.name }}</option>\n        </select>\n\n        <!--<input v-model=\"newOrder.typeOfWaste\" placeholder=\"Type\" required>-->\n        <input v-model=\"newOrder.weight\" placeholder=\"Weight\" required>\n       \n        <button type=\"submit\">Add order</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import api from '@/services/api';\n  \n  export default {\n    data() {\n      return {\n        orders: [],\n        newOrder: {\n          typeOfWaste: '',\n          description: '',\n          quantity: 0\n        },\n        /*wasteTypes: [\n          { id: 1, name: 'Plastic' },\n          { id: 2, name: 'Metal' },\n          { id: 3, name: 'Cardboard' },\n          { id: 4, name: 'Bronze' },\n        ]*/\n      };\n    },\n    methods: {\n      async fetchOrders() {\n        try {\n          const response = await api.getAllOrders();\n          this.orders = response.data;\n        } catch (error) {\n          console.error('Error fetching orders:', error);\n        }\n      },\n      async addOrder() {\n        try {\n          const response = await api.addOrder(this.newOrder);\n          this.orders.push(response.data);\n          this.newOrder = { name: '', description: '', quantity: 0 };\n\n        } catch (error) {\n          console.error('Error creating order:', error);\n        }\n      },\n      async deleteOrder(id) {\n        try {\n          await api.deleteOrder(id);\n          this.orders = this.orders.filter(order => order._id !== id);\n        } catch (error) {\n          console.error('Error deleting order:', error);\n        }\n      }\n    },\n    created() {\n      this.fetchOrders();\n    }\n  };\n  </script>\n  "],"mappings":";AAuBE,OAAOA,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ;MACA;;;;;;IAMF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,GAAG,CAACU,YAAY,CAAC,CAAC;QACzC,IAAI,CAACR,MAAK,GAAIO,QAAQ,CAACR,IAAI;MAC7B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAME,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMT,GAAG,CAACa,QAAQ,CAAC,IAAI,CAACV,QAAQ,CAAC;QAClD,IAAI,CAACD,MAAM,CAACY,IAAI,CAACL,QAAQ,CAACR,IAAI,CAAC;QAC/B,IAAI,CAACE,QAAO,GAAI;UAAEY,IAAI,EAAE,EAAE;UAAEV,WAAW,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAC;MAE5D,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMK,WAAWA,CAACC,EAAE,EAAE;MACpB,IAAI;QACF,MAAMjB,GAAG,CAACgB,WAAW,CAACC,EAAE,CAAC;QACzB,IAAI,CAACf,MAAK,GAAI,IAAI,CAACA,MAAM,CAACgB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,GAAE,KAAMH,EAAE,CAAC;MAC7D,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}