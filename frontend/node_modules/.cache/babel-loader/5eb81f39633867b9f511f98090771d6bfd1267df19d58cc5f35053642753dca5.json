{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        _id: '',\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [{\n        id: 1,\n        name: 'Regular'\n      }, {\n        id: 2,\n        name: 'Business'\n      }, {\n        id: 3,\n        name: 'Premium'\n      }, {\n        id: 4,\n        name: 'Internal'\n      }],\n      isEditing: false,\n      editCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    async updateCustomer() {\n      try {\n        if (this.isEditing) {\n          await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n          const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n          if (index !== -1) {\n            this.customers.splice(index, 1, {\n              ...this.currentCustomer,\n              _id: this.editCustomerId\n            });\n          }\n        } else {\n          const response = await api.createCustomer(this.currentCustomer);\n          this.customers.push(response.data);\n        }\n        this.resetCustomerForm();\n      } catch (error) {\n        console.error('Error updating/creating customer:', error);\n      }\n    },\n    async deleteCustomer(id) {\n      try {\n        await api.deleteCustomer(id);\n        this.customers = this.customers.filter(customer => customer._id !== id);\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.editCustomerId = customer._id;\n      this.currentCustomer = {\n        ...customer\n      };\n    },\n    cancelEdit() {\n      this.resetCustomerForm();\n    },\n    resetCustomerForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      this.currentCustomer = {\n        name: '',\n        description: '',\n        category: ''\n      };\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};","map":{"version":3,"names":["api","data","customers","currentCustomer","_id","name","description","category","customerTypes","id","isEditing","editCustomerId","methods","fetchCustomers","response","getAllCustomers","error","console","updateCustomer","index","findIndex","customer","splice","createCustomer","push","resetCustomerForm","deleteCustomer","filter","editCustomer","cancelEdit","created"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerEdit.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <ul class=\"customer-list\">\n      <li v-for=\"customer in customers\" :key=\"customer._id\" class=\"customer-item\">\n        <span>{{ customer.name }}</span>\n        <span>{{ customer.description }}</span>\n        <span>{{ customer.category }}</span>\n        <button class=\"btn delete-btn\" @click=\"deleteCustomer(customer._id)\">Delete</button>\n        <button class=\"btn edit-btn\" @click=\"editCustomer(customer)\">Edit</button>\n      </li>\n    </ul>\n    <form @submit.prevent=\"updateCustomer\" class=\"customer-form\">\n      <input v-model=\"currentCustomer.name\" placeholder=\"Name\" required class=\"input-field\">\n      <input v-model=\"currentCustomer.description\" placeholder=\"Description\" required class=\"input-field\">\n      <select v-model=\"currentCustomer.category\" class=\"input-field\">\n        <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.name\">{{ customer.name }}</option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        _id: '',\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [\n        { id: 1, name: 'Regular' },\n        { id: 2, name: 'Business' },\n        { id: 3, name: 'Premium' },\n        { id: 4, name: 'Internal' }\n      ],\n      isEditing: false,\n      editCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    async updateCustomer() {\n      try {\n        if (this.isEditing) {\n          await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n          const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n          if (index !== -1) {\n            this.customers.splice(index, 1, { ...this.currentCustomer, _id: this.editCustomerId });\n          }\n        } else {\n          const response = await api.createCustomer(this.currentCustomer);\n          this.customers.push(response.data);\n        }\n        this.resetCustomerForm();\n      } catch (error) {\n        console.error('Error updating/creating customer:', error);\n      }\n    },\n    async deleteCustomer(id) {\n      try {\n        await api.deleteCustomer(id);\n        this.customers = this.customers.filter(customer => customer._id !== id);\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.editCustomerId = customer._id;\n      this.currentCustomer = { ...customer };\n    },\n    cancelEdit() {\n      this.resetCustomerForm();\n    },\n    resetCustomerForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      this.currentCustomer = { name: '', description: '', category: '' };\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.customer-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.customer-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  background-color: #f9f9f9;\n}\n\n.customer-item span {\n  flex: 1;\n  margin: 0 5px;\n}\n\n.customer-item .btn {\n  margin-left: 10px;\n}\n\n.customer-form {\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n}\n\n.input-field {\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  width: 100%;\n}\n\n.form-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.btn {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.delete-btn {\n  background-color: #e74c3c;\n  color: white;\n}\n\n.edit-btn {\n  background-color: #3498db;\n  color: white;\n}\n\n.submit-btn {\n  background-color: #2ecc71;\n  color: white;\n  flex: 1;\n}\n\n.cancel-btn {\n  background-color: #e67e22;\n  color: white;\n  margin-left: 10px;\n}\n\n.btn:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}