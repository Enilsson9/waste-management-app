{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      orders: [],\n      newOrder: {\n        typeOfWaste: '',\n        weight: 0\n      },\n      wasteTypes: [{\n        id: 1,\n        name: 'Plastic'\n      }, {\n        id: 2,\n        name: 'Metal'\n      }, {\n        id: 3,\n        name: 'Cardboard'\n      }, {\n        id: 4,\n        name: 'Bronze'\n      }],\n      showAddOrderForm: false,\n      showDeleteModal: false,\n      deleteOrderId: null\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      api.getAllOrders().then(response => {\n        this.orders = response.data;\n      }).catch(error => {\n        console.error('Error fetching orders:', error);\n      });\n    },\n    addOrder() {\n      api.addOrder(this.newOrder).then(response => {\n        this.orders.push(response.data);\n        this.newOrder = {\n          typeOfWaste: '',\n          weight: 0\n        };\n        this.showAddOrderForm = false;\n      }).catch(error => {\n        console.error('Error creating order:', error);\n      });\n    },\n    confirmDeleteOrder(order) {\n      this.showDeleteModal = true;\n      this.deleteOrderId = order._id;\n    },\n    deleteOrder() {\n      api.deleteOrder(this.deleteOrderId).then(() => {\n        this.orders = this.orders.filter(order => order._id !== this.deleteOrderId);\n        this.closeDeleteModal();\n      }).catch(error => {\n        console.error('Error deleting order:', error);\n      });\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteOrderId = null;\n    },\n    toggleAddOrderForm() {\n      this.showAddOrderForm = !this.showAddOrderForm;\n    },\n    editOrder(order) {\n      this.$router.push({\n        name: 'EditOrder',\n        params: {\n          id: order._id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["api","data","orders","newOrder","typeOfWaste","weight","wasteTypes","id","name","showAddOrderForm","showDeleteModal","deleteOrderId","created","fetchOrders","methods","getAllOrders","then","response","catch","error","console","addOrder","push","confirmDeleteOrder","order","_id","deleteOrder","filter","closeDeleteModal","toggleAddOrderForm","editOrder","$router","params"],"sources":["/home/edward/summer-project/frontend/src/components/forms/orderForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Orders</h1>\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Type of Waste</th>\n          <th>Weight</th>\n          <th>Created At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order._id\" class=\"data-item\">\n          <td>{{ order.typeOfWaste }}</td>\n          <td>{{ order.weight }}</td>\n          <td>{{ order.createdAt }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editOrder(order)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteOrder(order)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <button @click=\"toggleAddOrderForm\" class=\"btn add-btn\">\n      {{ showAddOrderForm ? \"Cancel\" : \"Add Order\" }}\n    </button>\n\n    <form v-if=\"showAddOrderForm\" @submit.prevent=\"addOrder\" class=\"form\">\n      <select v-model=\"newOrder.typeOfWaste\" required>\n        <option v-for=\"waste in wasteTypes\" :key=\"waste.id\" :value=\"waste.name\">{{ waste.name }}</option>\n      </select>\n      <input v-model=\"newOrder.weight\" type=\"number\" placeholder=\"Weight\" required>\n      <button type=\"submit\" class=\"btn confirm-add-btn\">Add Order</button>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this order?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteOrder\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      orders: [],\n      newOrder: {\n        typeOfWaste: '',\n        weight: 0,\n      },\n      wasteTypes: [\n        { id: 1, name: 'Plastic' },\n        { id: 2, name: 'Metal' },\n        { id: 3, name: 'Cardboard' },\n        { id: 4, name: 'Bronze' },\n      ],\n      showAddOrderForm: false,\n      showDeleteModal: false,\n      deleteOrderId: null,\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      api.getAllOrders()\n        .then(response => {\n          this.orders = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching orders:', error);\n        });\n    },\n    addOrder() {\n      api.addOrder(this.newOrder)\n        .then(response => {\n          this.orders.push(response.data);\n          this.newOrder = { typeOfWaste: '', weight: 0 };\n          this.showAddOrderForm = false;\n        })\n        .catch(error => {\n          console.error('Error creating order:', error);\n        });\n    },\n    confirmDeleteOrder(order) {\n      this.showDeleteModal = true;\n      this.deleteOrderId = order._id;\n    },\n    deleteOrder() {\n      api.deleteOrder(this.deleteOrderId)\n        .then(() => {\n          this.orders = this.orders.filter(order => order._id !== this.deleteOrderId);\n          this.closeDeleteModal();\n        })\n        .catch(error => {\n          console.error('Error deleting order:', error);\n        });\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteOrderId = null;\n    },\n    toggleAddOrderForm() {\n      this.showAddOrderForm = !this.showAddOrderForm;\n    },\n    editOrder(order) {\n      this.$router.push({ name: 'EditOrder', params: { id: order._id } });\n    }\n  }\n};\n</script>\n"],"mappings":";AAmDA,OAAOA,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE;MACV,CAAC;MACDC,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAU,CAAC,EAC1B;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,EACxB;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,EAC5B;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC,CAC1B;MACDC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,KAAK;MACtBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZb,GAAG,CAACe,YAAY,CAAC,EACdC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACf,MAAK,GAAIe,QAAQ,CAAChB,IAAI;MAC7B,CAAC,EACAiB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC;IACDE,QAAQA,CAAA,EAAG;MACTrB,GAAG,CAACqB,QAAQ,CAAC,IAAI,CAAClB,QAAQ,EACvBa,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACf,MAAM,CAACoB,IAAI,CAACL,QAAQ,CAAChB,IAAI,CAAC;QAC/B,IAAI,CAACE,QAAO,GAAI;UAAEC,WAAW,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAC;QAC9C,IAAI,CAACI,gBAAe,GAAI,KAAK;MAC/B,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC;IACDI,kBAAkBA,CAACC,KAAK,EAAE;MACxB,IAAI,CAACd,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACC,aAAY,GAAIa,KAAK,CAACC,GAAG;IAChC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ1B,GAAG,CAAC0B,WAAW,CAAC,IAAI,CAACf,aAAa,EAC/BK,IAAI,CAAC,MAAM;QACV,IAAI,CAACd,MAAK,GAAI,IAAI,CAACA,MAAM,CAACyB,MAAM,CAACH,KAAI,IAAKA,KAAK,CAACC,GAAE,KAAM,IAAI,CAACd,aAAa,CAAC;QAC3E,IAAI,CAACiB,gBAAgB,CAAC,CAAC;MACzB,CAAC,EACAV,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC;IACDS,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAClB,eAAc,GAAI,KAAK;MAC5B,IAAI,CAACC,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDkB,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACpB,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAChD,CAAC;IACDqB,SAASA,CAACN,KAAK,EAAE;MACf,IAAI,CAACO,OAAO,CAACT,IAAI,CAAC;QAAEd,IAAI,EAAE,WAAW;QAAEwB,MAAM,EAAE;UAAEzB,EAAE,EAAEiB,KAAK,CAACC;QAAI;MAAE,CAAC,CAAC;IACrE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}