{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      invoices: [],\n      newInvoice: {\n        order: '',\n        payment: '',\n        status: ''\n      },\n      paymentTypes: [{\n        id: 1,\n        name: 'Paypal'\n      }, {\n        id: 2,\n        name: 'Credit card'\n      }, {\n        id: 3,\n        name: 'Cash'\n      }, {\n        id: 4,\n        name: 'Bank'\n      }],\n      showForm: false,\n      showDeleteModal: false,\n      deleteInvoiceId: null,\n      isEditing: false\n    };\n  },\n  methods: {\n    async fetchInvoices() {\n      try {\n        const response = await api.getAllInvoices();\n        this.invoices = response.data;\n      } catch (error) {\n        console.error('Error fetching invoices:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateInvoice();\n      } else {\n        await this.createInvoice();\n      }\n    },\n    async createInvoice() {\n      try {\n        const response = await api.createInvoice(this.newInvoice);\n        this.invoices.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating invoice:', error);\n      }\n    },\n    async updateInvoice() {\n      try {\n        await api.updateInvoice(this.editInvoiceId, this.newInvoice);\n        const index = this.invoices.findIndex(invoice => invoice._id === this.editInvoiceId);\n        if (index !== -1) {\n          this.invoices.splice(index, 1, {\n            ...this.newInvoice,\n            _id: this.editInvoiceId\n          });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating invoice:', error);\n      }\n    },\n    async deleteInvoice() {\n      try {\n        await api.deleteInvoice(this.deleteInvoiceId);\n        this.invoices = this.invoices.filter(invoice => invoice._id !== this.deleteInvoiceId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting invoice:', error);\n      }\n    },\n    confirmDeleteInvoice(invoice) {\n      this.showDeleteModal = true;\n      this.deleteInvoiceId = invoice._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteInvoiceId = null;\n    },\n    editInvoice(invoice) {\n      this.newInvoice = {\n        ...invoice\n      };\n      this.editInvoiceId = invoice._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.newInvoice = {\n        order: '',\n        payment: '',\n        status: 0\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchInvoices();\n  }\n};","map":{"version":3,"names":["api","data","invoices","newInvoice","order","payment","status","paymentTypes","id","name","showForm","showDeleteModal","deleteInvoiceId","isEditing","methods","fetchInvoices","response","getAllInvoices","error","console","toggleForm","show","resetForm","submitForm","updateInvoice","createInvoice","push","editInvoiceId","index","findIndex","invoice","_id","splice","deleteInvoice","filter","closeDeleteModal","confirmDeleteInvoice","editInvoice","created"],"sources":["/home/edward/summer-project/frontend/src/components/forms/invoiceForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Order</th>\n          <th>Payment</th>\n          <th>Status</th>\n          <th>Created At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"invoice in invoices\" :key=\"invoice._id\" class=\"data-item\">\n          <td>{{ invoice.order }}</td>\n          <td>{{ invoice.payment }}</td>\n          <td>{{ invoice.status }}</td>\n          <td>{{ invoice.createdAt }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editInvoice(invoice)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteInvoice(invoice)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Toggle Add New Invoice Button -->\n    <button v-if=\"!showForm\" class=\"btn add-btn\" @click=\"toggleForm(true)\">Add New Invoice</button>\n\n    <!-- Invoice Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"data-form\">\n      <input v-model=\"newInvoice.order\" type=\"number\" placeholder=\"Order nr\" required class=\"input-field\">\n\n      <select v-model=\"newInvoice.payment\" class=\"input-field\">\n        <option v-for=\"paymentType in paymentTypes\" :key=\"paymentType.id\" :value=\"paymentType.name\">\n          {{ paymentType.name }}\n        </option>\n      </select>\n\n      <input v-model=\"newInvoice.status\" placeholder=\"Status\" required class=\"input-field\">\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} Invoice</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this invoice?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteInvoice\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      invoices: [],\n      newInvoice: {\n        order: '',\n        payment: '',\n        status: ''\n      },\n      paymentTypes: [\n        { id: 1, name: 'Paypal' },\n        { id: 2, name: 'Credit card' },\n        { id: 3, name: 'Cash' },\n        { id: 4, name: 'Bank' }\n      ],\n      showForm: false,\n      showDeleteModal: false,\n      deleteInvoiceId: null,\n      isEditing: false\n    };\n  },\n  methods: {\n    async fetchInvoices() {\n      try {\n        const response = await api.getAllInvoices();\n        this.invoices = response.data;\n      } catch (error) {\n        console.error('Error fetching invoices:', error);\n      } \n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateInvoice();\n      } else {\n        await this.createInvoice();\n      }\n    },\n    async createInvoice() {\n      try {\n        const response = await api.createInvoice(this.newInvoice);\n        this.invoices.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating invoice:', error);\n      }\n    },\n    async updateInvoice() {\n      try {\n        await api.updateInvoice(this.editInvoiceId, this.newInvoice);\n        const index = this.invoices.findIndex(invoice => invoice._id === this.editInvoiceId);\n        if (index !== -1) {\n          this.invoices.splice(index, 1, { ...this.newInvoice, _id: this.editInvoiceId });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating invoice:', error);\n      }\n    },\n\n    \n    async deleteInvoice() {\n      try {\n        await api.deleteInvoice(this.deleteInvoiceId);\n        this.invoices = this.invoices.filter(invoice => invoice._id !== this.deleteInvoiceId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting invoice:', error);\n      }\n    },\n    confirmDeleteInvoice(invoice) {\n      this.showDeleteModal = true;\n      this.deleteInvoiceId = invoice._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteInvoiceId = null;\n    },\n    editInvoice(invoice) {\n      this.newInvoice = { ...invoice };\n      this.editInvoiceId = invoice._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.newInvoice = {\n        order: '',\n        payment: '',\n        status: 0\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchInvoices();\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}