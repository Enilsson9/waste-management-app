{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Type:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Description:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Price per Kg:\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.isEdit ? 'Edit Waste' : 'Add Waste'), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.saveWaste && $options.saveWaste(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.waste.type = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.waste.type]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.waste.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.waste.description]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.waste.pricePerKg = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.waste.pricePerKg]])]), _createElementVNode(\"button\", _hoisted_4, _toDisplayString($data.isEdit ? 'Update' : 'Create'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_toDisplayString","$data","isEdit","onSubmit","_cache","_withModifiers","args","$options","saveWaste","_hoisted_1","$event","waste","required","_hoisted_2","description","_hoisted_3","pricePerKg","_hoisted_4"],"sources":["/home/edward/summer-project/frontend/src/components/WasteForm.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>{{ isEdit ? 'Edit Waste' : 'Add Waste' }}</h1>\n        <form @submit.prevent=\"saveWaste\">\n            <div>\n                <label>Type:</label>\n                <input v-model=\"waste.type\" required />\n            </div>\n            <div>\n                <label>Description:</label>\n                <input v-model=\"waste.description\" />\n            </div>\n            <div>\n                <label>Price per Kg:</label>\n                <input type=\"number\" v-model=\"waste.pricePerKg\" required />\n            </div>\n            <button type=\"submit\">{{ isEdit ? 'Update' : 'Create' }}</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport wasteService from '../services/api';\n\nexport default {\n    data() {\n        return {\n            waste: {\n                type: '',\n                description: '',\n                pricePerKg: 0\n            },\n            isEdit: false\n        };\n    },\n    created() {\n        if (this.$route.params.id) {\n            this.isEdit = true;\n            this.fetchWaste(this.$route.params.id);\n        }\n    },\n    methods: {\n        fetchWaste(id) {\n            wasteService.get(id)\n                .then(response => {\n                    this.waste = response.data;\n                })\n                .catch(error => {\n                    console.error(\"There was an error fetching the waste!\", error);\n                });\n        },\n        saveWaste() {\n            if (this.isEdit) {\n                wasteService.update(this.waste._id, this.waste)\n                    .then(() => {\n                        this.$router.push({ name: 'WasteList' });\n                    })\n                    .catch(error => {\n                        console.error(\"There was an error updating the waste!\", error);\n                    });\n            } else {\n                wasteService.create(this.waste)\n                    .then(() => {\n                        this.$router.push({ name: 'WasteList' });\n                    })\n                    .catch(error => {\n                        console.error(\"There was an error creating the waste!\", error);\n                    });\n            }\n        }\n    }\n};\n</script>\n"],"mappings":";gCAKgBA,mBAAA,CAAoB,eAAb,OAAK;gCAIZA,mBAAA,CAA2B,eAApB,cAAY;gCAInBA,mBAAA,CAA4B,eAArB,eAAa;;EAGhBC,IAAI,EAAC;AAAQ;;uBAf7BC,mBAAA,CAiBM,cAhBFF,mBAAA,CAAkD,YAAAG,gBAAA,CAA3CC,KAAA,CAAAC,MAAM,+CACbL,mBAAA,CAcO;IAdAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAC5BT,mBAAA,CAGM,cAFFY,UAAoB,E,gBACpBZ,mBAAA,CAAuC;IANvD,uBAAAO,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMgCT,KAAA,CAAAU,KAAK,CAACb,IAAI,GAAAY,MAAA;IAAEE,QAAQ,EAAR;iDAAZX,KAAA,CAAAU,KAAK,CAACb,IAAI,E,KAE9BD,mBAAA,CAGM,cAFFgB,UAA2B,E,gBAC3BhB,mBAAA,CAAqC;IAVrD,uBAAAO,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAUgCT,KAAA,CAAAU,KAAK,CAACG,WAAW,GAAAJ,MAAA;iDAAjBT,KAAA,CAAAU,KAAK,CAACG,WAAW,E,KAErCjB,mBAAA,CAGM,cAFFkB,UAA4B,E,gBAC5BlB,mBAAA,CAA2D;IAApDC,IAAI,EAAC,QAAQ;IAdpC,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAc8CT,KAAA,CAAAU,KAAK,CAACK,UAAU,GAAAN,MAAA;IAAEE,QAAQ,EAAR;iDAAlBX,KAAA,CAAAU,KAAK,CAACK,UAAU,E,KAElDnB,mBAAA,CAAiE,UAAjEoB,UAAiE,EAAAjB,gBAAA,CAAxCC,KAAA,CAAAC,MAAM,uC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}