{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Orders\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"data-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Type of Waste\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Weight\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Created At\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn confirm-add-btn\"\n}, \"Add Order\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_11 = {\n  class: \"modal-content\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this order?\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order._id,\n      class: \"data-item\"\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.typeOfWaste), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.weight), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.createdAt), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_5, [_createElementVNode(\"button\", {\n      class: \"btn edit-btn\",\n      onClick: $event => $options.editOrder(order)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      class: \"btn delete-btn\",\n      onClick: $event => $options.confirmDeleteOrder(order)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleAddOrderForm && $options.toggleAddOrderForm(...args)),\n    class: \"btn add-btn\"\n  }, _toDisplayString($data.showAddOrderForm ? \"Cancel\" : \"Add Order\"), 1 /* TEXT */), $data.showAddOrderForm ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.addOrder && $options.addOrder(...args), [\"prevent\"])),\n    class: \"form\"\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newOrder.typeOfWaste = $event),\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.wasteTypes, waste => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: waste.id,\n      value: waste.name\n    }, _toDisplayString(waste.name), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.newOrder.typeOfWaste]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newOrder.weight = $event),\n    type: \"number\",\n    placeholder: \"Weight\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newOrder.weight]]), _hoisted_9], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Delete Confirmation Modal \"), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"btn confirm-delete-btn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.deleteOrder && $options.deleteOrder(...args))\n  }, \"Yes, Delete\"), _createElementVNode(\"button\", {\n    class: \"btn cancel-btn\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.closeDeleteModal && $options.closeDeleteModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","orders","order","_id","_toDisplayString","typeOfWaste","weight","createdAt","_hoisted_5","onClick","$event","$options","editOrder","_hoisted_6","confirmDeleteOrder","_hoisted_7","_cache","args","toggleAddOrderForm","showAddOrderForm","onSubmit","_withModifiers","addOrder","newOrder","required","wasteTypes","waste","id","value","name","_hoisted_8","placeholder","_hoisted_9","_createCommentVNode","showDeleteModal","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","deleteOrder","closeDeleteModal"],"sources":["/home/edward/summer-project/frontend/src/components/forms/orderForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Orders</h1>\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Type of Waste</th>\n          <th>Weight</th>\n          <th>Created At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order._id\" class=\"data-item\">\n          <td>{{ order.typeOfWaste }}</td>\n          <td>{{ order.weight }}</td>\n          <td>{{ order.createdAt }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editOrder(order)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteOrder(order)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <button @click=\"toggleAddOrderForm\" class=\"btn add-btn\">\n      {{ showAddOrderForm ? \"Cancel\" : \"Add Order\" }}\n    </button>\n\n    <form v-if=\"showAddOrderForm\" @submit.prevent=\"addOrder\" class=\"form\">\n      <select v-model=\"newOrder.typeOfWaste\" required>\n        <option v-for=\"waste in wasteTypes\" :key=\"waste.id\" :value=\"waste.name\">{{ waste.name }}</option>\n      </select>\n      <input v-model=\"newOrder.weight\" type=\"number\" placeholder=\"Weight\" required>\n      <button type=\"submit\" class=\"btn confirm-add-btn\">Add Order</button>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this order?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteOrder\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      orders: [],\n      newOrder: {\n        typeOfWaste: '',\n        weight: 0,\n      },\n      wasteTypes: [\n        { id: 1, name: 'Plastic' },\n        { id: 2, name: 'Metal' },\n        { id: 3, name: 'Cardboard' },\n        { id: 4, name: 'Bronze' },\n      ],\n      showAddOrderForm: false,\n      showDeleteModal: false,\n      deleteOrderId: null,\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      api.getAllOrders()\n        .then(response => {\n          this.orders = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching orders:', error);\n        });\n    },\n    addOrder() {\n      api.addOrder(this.newOrder)\n        .then(response => {\n          this.orders.push(response.data);\n          this.newOrder = { typeOfWaste: '', weight: 0 };\n          this.showAddOrderForm = false;\n        })\n        .catch(error => {\n          console.error('Error creating order:', error);\n        });\n    },\n    confirmDeleteOrder(order) {\n      this.showDeleteModal = true;\n      this.deleteOrderId = order._id;\n    },\n    deleteOrder() {\n      api.deleteOrder(this.deleteOrderId)\n        .then(() => {\n          this.orders = this.orders.filter(order => order._id !== this.deleteOrderId);\n          this.closeDeleteModal();\n        })\n        .catch(error => {\n          console.error('Error deleting order:', error);\n        });\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteOrderId = null;\n    },\n    toggleAddOrderForm() {\n      this.showAddOrderForm = !this.showAddOrderForm;\n    },\n    editOrder(order) {\n      this.$router.push({ name: 'EditOrder', params: { id: order._id } });\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}