{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      orders: [],\n      newOrder: {\n        typeOfWate: '',\n        description: '',\n        quantity: 0\n      },\n      wasteTypes: [{\n        id: 1,\n        name: 'Plastic'\n      }, {\n        id: 2,\n        name: 'Metal'\n      }, {\n        id: 3,\n        name: 'Cardboard'\n      }, {\n        id: 4,\n        name: 'Bronze'\n      }]\n    };\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await api.getAllOrders();\n        this.orders = response.data;\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    async createOrder() {\n      try {\n        const response = await api.createOrder(this.newOrder);\n        this.orders.push(response.data);\n        this.newOrder = {\n          name: '',\n          description: '',\n          quantity: 0\n        };\n      } catch (error) {\n        console.error('Error creating order:', error);\n      }\n    },\n    async deleteOrder(id) {\n      try {\n        await api.delete(id);\n        this.orders = this.orders.filter(order => order._id !== id);\n      } catch (error) {\n        console.error('Error deleting order:', error);\n      }\n    }\n  },\n  created() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["api","data","orders","newOrder","typeOfWate","description","quantity","wasteTypes","id","name","methods","fetchOrders","response","getAllOrders","error","console","createOrder","push","deleteOrder","delete","filter","order","_id","created"],"sources":["/home/edward/summer-project/frontend/src/components/forms/orderForm.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"order in orders\" :key=\"order._id\">\n          {{ order.typeOfWaste }} - {{ order.weight }} - {{ order.createdAt }}\n          <button @click=\"deleteOrder(order._id)\">Delete</button>\n        </li>\n      </ul>\n      <form @submit.prevent=\"createOrder\">\n        \n\n        <select v-model=\"newOrder.typeOfWaste\" id=\"typeOfWaste\">\n        <option v-for=\"waste in wasteTypes\" :key=\"waste.id\" :value=\"waste.id\">{{ waste.name }}</option>\n        </select>\n\n        <input v-model=\"newOrder.description\" placeholder=\"Description\" required>\n        <input v-model=\"newOrder.quantity\" type=\"number\" placeholder=\"Quantity\" required>\n        <button type=\"submit\">Add order</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import api from '@/services/api';\n  \n  export default {\n    data() {\n      return {\n        orders: [],\n        newOrder: {\n          typeOfWate: '',\n          description: '',\n          quantity: 0\n        },\n        wasteTypes: [\n          { id: 1, name: 'Plastic' },\n          { id: 2, name: 'Metal' },\n          { id: 3, name: 'Cardboard' },\n          { id: 4, name: 'Bronze' },\n        ]\n      };\n    },\n    methods: {\n      async fetchOrders() {\n        try {\n          const response = await api.getAllOrders();\n          this.orders = response.data;\n        } catch (error) {\n          console.error('Error fetching orders:', error);\n        }\n      },\n      async createOrder() {\n        try {\n          const response = await api.createOrder(this.newOrder);\n          this.orders.push(response.data);\n          this.newOrder = { name: '', description: '', quantity: 0 };\n        } catch (error) {\n          console.error('Error creating order:', error);\n        }\n      },\n      async deleteOrder(id) {\n        try {\n          await api.delete(id);\n          this.orders = this.orders.filter(order => order._id !== id);\n        } catch (error) {\n          console.error('Error deleting order:', error);\n        }\n      }\n    },\n    created() {\n      this.fetchOrders();\n    }\n  };\n  </script>\n  "],"mappings":";AAuBE,OAAOA,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;QACRC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAU,CAAC,EAC1B;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,EACxB;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,EAC5B;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC;IAE7B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,GAAG,CAACa,YAAY,CAAC,CAAC;QACzC,IAAI,CAACX,MAAK,GAAIU,QAAQ,CAACX,IAAI;MAC7B,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMZ,GAAG,CAACgB,WAAW,CAAC,IAAI,CAACb,QAAQ,CAAC;QACrD,IAAI,CAACD,MAAM,CAACe,IAAI,CAACL,QAAQ,CAACX,IAAI,CAAC;QAC/B,IAAI,CAACE,QAAO,GAAI;UAAEM,IAAI,EAAE,EAAE;UAAEJ,WAAW,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAC;MAC5D,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMI,WAAWA,CAACV,EAAE,EAAE;MACpB,IAAI;QACF,MAAMR,GAAG,CAACmB,MAAM,CAACX,EAAE,CAAC;QACpB,IAAI,CAACN,MAAK,GAAI,IAAI,CAACA,MAAM,CAACkB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,GAAE,KAAMd,EAAE,CAAC;MAC7D,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACZ,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}