{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [{\n        id: 1,\n        name: 'Regular'\n      }, {\n        id: 2,\n        name: 'Business'\n      }, {\n        id: 3,\n        name: 'Premium'\n      }, {\n        id: 4,\n        name: 'Internal'\n      }],\n      isEditing: false,\n      editCustomerId: null,\n      showForm: false,\n      showDeleteModal: false,\n      deleteCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateCustomer();\n      } else {\n        await this.createCustomer();\n      }\n    },\n    async updateCustomer() {\n      try {\n        await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n        const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n        if (index !== -1) {\n          this.customers.splice(index, 1, {\n            ...this.currentCustomer,\n            _id: this.editCustomerId\n          });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating customer:', error);\n      }\n    },\n    async createCustomer() {\n      try {\n        const response = await api.createCustomer(this.currentCustomer);\n        this.customers.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating customer:', error);\n      }\n    },\n    async deleteCustomer() {\n      try {\n        await api.deleteCustomer(this.deleteCustomerId);\n        this.customers = this.customers.filter(customer => customer._id !== this.deleteCustomerId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    confirmDeleteCustomer(customer) {\n      this.showDeleteModal = true;\n      this.deleteCustomerId = customer._id;\n      this.currentCustomer = {\n        ...customer\n      };\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteCustomerId = null;\n      this.resetForm();\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.showForm = true;\n      this.editCustomerId = customer._id;\n      // Copy customer details to currentCustomer\n      this.currentCustomer = {\n        ...customer\n      };\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      // Reset currentCustomer to default values\n      this.currentCustomer = {\n        name: '',\n        description: '',\n        category: ''\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};","map":{"version":3,"names":["api","data","customers","currentCustomer","name","description","category","customerTypes","id","isEditing","editCustomerId","showForm","showDeleteModal","deleteCustomerId","methods","fetchCustomers","response","getAllCustomers","error","console","toggleForm","show","resetForm","submitForm","updateCustomer","createCustomer","index","findIndex","customer","_id","splice","push","deleteCustomer","filter","closeDeleteModal","confirmDeleteCustomer","editCustomer","cancelEdit","created"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <table class=\"customer-table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Category</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"customer in customers\" :key=\"customer._id\" class=\"customer-item\">\n          <td>{{ customer.name }}</td>\n          <td>{{ customer.description }}</td>\n          <td>{{ customer.category }}</td>\n          <td>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteCustomer(customer)\">Delete</button>\n            <button class=\"btn edit-btn\" @click=\"editCustomer(customer)\">Edit</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Toggle Add New Customer Button -->\n    <button v-if=\"!showForm\" class=\"btn add-btn\" @click=\"toggleForm(true)\">Add New Customer</button>\n\n    <!-- Customer Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"customer-form\">\n      <input v-model=\"currentCustomer.name\" placeholder=\"Name\" required class=\"input-field\">\n      <input v-model=\"currentCustomer.description\" placeholder=\"Description\" required class=\"input-field\">\n      <select v-model=\"currentCustomer.category\" class=\"input-field\">\n        <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.name\">{{ customer.name }}</option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete {{ currentCustomer.name }}?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteCustomer\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [\n        { id: 1, name: 'Regular' },\n        { id: 2, name: 'Business' },\n        { id: 3, name: 'Premium' },\n        { id: 4, name: 'Internal' }\n      ],\n      isEditing: false,\n      editCustomerId: null,\n      showForm: false,\n      showDeleteModal: false,\n      deleteCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateCustomer();\n      } else {\n        await this.createCustomer();\n      }\n    },\n    async updateCustomer() {\n      try {\n        await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n        const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n        if (index !== -1) {\n          this.customers.splice(index, 1, { ...this.currentCustomer, _id: this.editCustomerId });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating customer:', error);\n      }\n    },\n    async createCustomer() {\n      try {\n        const response = await api.createCustomer(this.currentCustomer);\n        this.customers.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating customer:', error);\n      }\n    },\n    async deleteCustomer() {\n      try {\n        await api.deleteCustomer(this.deleteCustomerId);\n        this.customers = this.customers.filter(customer => customer._id !== this.deleteCustomerId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    confirmDeleteCustomer(customer) {\n      this.showDeleteModal = true;\n      this.deleteCustomerId = customer._id;\n      this.currentCustomer = { ...customer };\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteCustomerId = null;\n      this.resetForm();\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.showForm = true;\n      this.editCustomerId = customer._id;\n      // Copy customer details to currentCustomer\n      this.currentCustomer = { ...customer };\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      // Reset currentCustomer to default values\n      this.currentCustomer = {\n        name: '',\n        description: '',\n        category: ''\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}