{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport orderService from '@/services/api';\nexport default {\n  data() {\n    return {\n      orders: [],\n      showDeleteModal: false,\n      deleteOrderId: null\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      orderService.getAllOrders().then(response => {\n        this.orders = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the orders!\", error);\n      });\n    },\n    confirmDeleteOrder(order) {\n      this.showDeleteModal = true;\n      this.deleteOrderId = order._id;\n    },\n    deleteOrder() {\n      orderService.deleteOrder(this.deleteOrderId).then(() => {\n        this.fetchOrders();\n        this.closeDeleteModal();\n      }).catch(error => {\n        console.error(\"There was an error deleting the order!\", error);\n      });\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteOrderId = null;\n    },\n    editOrder(order) {\n      this.$router.push({\n        name: 'EditOrder',\n        params: {\n          id: order._id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["orderService","data","orders","showDeleteModal","deleteOrderId","created","fetchOrders","methods","getAllOrders","then","response","catch","error","console","confirmDeleteOrder","order","_id","deleteOrder","closeDeleteModal","editOrder","$router","push","name","params","id"],"sources":["/home/edward/summer-project/frontend/src/components/forms/orderForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Order Types</h1>\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Type of Waste</th>\n          <th>Weight</th>\n          <th>Created At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order._id\" class=\"data-item\">\n          <td>{{ order.typeOfWaste }}</td>\n          <td>{{ order.weight }}</td>\n          <td>{{ order.createdAt }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editOrder(order)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteOrder(order)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <router-link to=\"/order/add\" class=\"btn add-btn\">Add new Order</router-link>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this order?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteOrder\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport orderService from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      orders: [],\n      showDeleteModal: false,\n      deleteOrderId: null,\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      orderService.getAllOrders()\n        .then(response => {\n          this.orders = response.data;\n        })\n        .catch(error => {\n          console.error(\"There was an error fetching the orders!\", error);\n        });\n    },\n    confirmDeleteOrder(order) {\n      this.showDeleteModal = true;\n      this.deleteOrderId = order._id;\n    },\n    deleteOrder() {\n      orderService.deleteOrder(this.deleteOrderId)\n        .then(() => {\n          this.fetchOrders();\n          this.closeDeleteModal();\n        })\n        .catch(error => {\n          console.error(\"There was an error deleting the order!\", error);\n        });\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteOrderId = null;\n    },\n    editOrder(order) {\n      this.$router.push({ name: 'EditOrder', params: { id: order._id } });\n    }\n  }\n};\n</script>\n"],"mappings":";AAyCA,OAAOA,YAAW,MAAO,gBAAgB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,eAAe,EAAE,KAAK;MACtBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZN,YAAY,CAACQ,YAAY,CAAC,EACvBC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,MAAK,GAAIQ,QAAQ,CAACT,IAAI;MAC7B,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE,CAAC,CAAC;IACN,CAAC;IACDE,kBAAkBA,CAACC,KAAK,EAAE;MACxB,IAAI,CAACZ,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACC,aAAY,GAAIW,KAAK,CAACC,GAAG;IAChC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZjB,YAAY,CAACiB,WAAW,CAAC,IAAI,CAACb,aAAa,EACxCK,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,WAAW,CAAC,CAAC;QAClB,IAAI,CAACY,gBAAgB,CAAC,CAAC;MACzB,CAAC,EACAP,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN,CAAC;IACDM,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACf,eAAc,GAAI,KAAK;MAC5B,IAAI,CAACC,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDe,SAASA,CAACJ,KAAK,EAAE;MACf,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,MAAM,EAAE;UAAEC,EAAE,EAAET,KAAK,CAACC;QAAI;MAAE,CAAC,CAAC;IACrE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}