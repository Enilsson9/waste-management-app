{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  type: \"submit\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.updateCustomer && $options.updateCustomer(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentCustomer.name = $event),\n    placeholder: \"Name\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.currentCustomer.description = $event),\n    placeholder: \"Description\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.description]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.currentCustomer.category = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customerTypes, customer => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customer.id,\n      value: customer.name\n    }, _toDisplayString(customer.name), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.currentCustomer.category]]), _createElementVNode(\"button\", _hoisted_2, _toDisplayString($data.isEditing ? 'Update' : 'Add') + \" customer\", 1 /* TEXT */), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"Cancel\")) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: customer._id\n    }, [_createTextVNode(_toDisplayString(customer.name) + \" - \" + _toDisplayString(customer.description) + \" - \" + _toDisplayString(customer.category) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteCustomer(customer._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.editCustomer(customer)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["type","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","updateCustomer","$event","$data","currentCustomer","name","placeholder","required","description","category","_Fragment","_renderList","customerTypes","customer","key","id","value","_hoisted_1","_hoisted_2","_toDisplayString","isEditing","onClick","cancelEdit","_createCommentVNode","customers","_id","_createTextVNode","deleteCustomer","_hoisted_3","editCustomer","_hoisted_4"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerEdit.vue"],"sourcesContent":["<template>\n    <div>\n \n      <form @submit.prevent=\"updateCustomer\">\n        <input v-model=\"currentCustomer.name\" placeholder=\"Name\" required>\n        <input v-model=\"currentCustomer.description\" placeholder=\"Description\" required>\n        <select v-model=\"currentCustomer.category\">\n          <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.name\">{{ customer.name }}</option>\n        </select>\n        <button type=\"submit\">{{ isEditing ? 'Update' : 'Add' }} customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\">Cancel</button>\n      </form>\n           <ul>\n        <li v-for=\"customer in customers\" :key=\"customer._id\">\n          {{ customer.name }} - {{ customer.description }} - {{ customer.category }}\n          <button @click=\"deleteCustomer(customer._id)\">Delete</button>\n          <button @click=\"editCustomer(customer)\">Edit</button>\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  import api from '@/services/api';\n  \n  export default {\n    data() {\n      return {\n        customers: [],\n        currentCustomer: {\n          name: '',\n          description: '',\n          category: ''\n        },\n        customerTypes: [\n          { id: 1, name: 'Regular' },\n          { id: 2, name: 'Business' },\n          { id: 3, name: 'Premium' },\n          { id: 4, name: 'Internal' }\n        ],\n        isEditing: false,\n        editCustomerId: null\n      };\n    },\n    methods: {\n      async fetchCustomers() {\n        try {\n          const response = await api.getAllCustomers();\n          this.customers = response.data;\n        } catch (error) {\n          console.error('Error fetching customers:', error);\n        }\n      },\n      async updateCustomer() {\n        try {\n          if (this.isEditing) {\n            // Update existing customer\n            await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n            const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n            if (index !== -1) {\n              this.customers.splice(index, 1, { ...this.currentCustomer, _id: this.editCustomerId });\n            }\n          } else {\n            // Create new customer\n            const response = await api.createCustomer(this.currentCustomer);\n            this.customers.push(response.data);\n          }\n          this.resetCustomerForm();\n        } catch (error) {\n          console.error('Error updating/creating customer:', error);\n        }\n      },\n      async deleteCustomer(id) {\n        try {\n          await api.deleteCustomer(id);\n          this.customers = this.customers.filter(customer => customer._id !== id);\n        } catch (error) {\n          console.error('Error deleting customer:', error);\n        }\n      },\n      editCustomer(customer) {\n        this.isEditing = true;\n        this.editCustomerId = customer._id;\n        this.currentCustomer = { ...customer };\n      },\n      cancelEdit() {\n        this.resetCustomerForm();\n      },\n      resetCustomerForm() {\n        this.isEditing = false;\n        this.editCustomerId = null;\n        this.currentCustomer = { name: '', description: '', category: '' };\n      }\n    },\n    created() {\n      this.fetchCustomers();\n    }\n  };\n  </script>\n  "],"mappings":";mBAAA;;EASgBA,IAAI,EAAC;AAAQ;mBAT7B;mBAAA;;uBACIC,mBAAA,CAkBM,cAhBJC,mBAAA,CAQO;IARAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;sBACnCJ,mBAAA,CAAkE;IAJ1E,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIwBC,KAAA,CAAAC,eAAe,CAACC,IAAI,GAAAH,MAAA;IAAEI,WAAW,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAzCJ,KAAA,CAAAC,eAAe,CAACC,IAAI,E,mBACpCV,mBAAA,CAAgF;IALxF,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKwBC,KAAA,CAAAC,eAAe,CAACI,WAAW,GAAAN,MAAA;IAAEI,WAAW,EAAC,aAAa;IAACC,QAAQ,EAAR;iDAAvDJ,KAAA,CAAAC,eAAe,CAACI,WAAW,E,mBAC3Cb,mBAAA,CAES;IARjB,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAMyBC,KAAA,CAAAC,eAAe,CAACK,QAAQ,GAAAP,MAAA;yBACvCR,mBAAA,CAAgHgB,SAAA,QAP1HC,WAAA,CAOqCR,KAAA,CAAAS,aAAa,EAAzBC,QAAQ;yBAAvBnB,mBAAA,CAAgH;MAArEoB,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAGC,KAAK,EAAEH,QAAQ,CAACR;wBAASQ,QAAQ,CAACR,IAAI,wBAP9GY,UAAA;2EAMyBd,KAAA,CAAAC,eAAe,CAACK,QAAQ,E,GAGzCd,mBAAA,CAA0E,UAA1EuB,UAA0E,EAAAC,gBAAA,CAAjDhB,KAAA,CAAAiB,SAAS,uBAAsB,WAAS,iBACjBjB,KAAA,CAAAiB,SAAS,I,cAAzD1B,mBAAA,CAA0E;IAVlFoB,GAAA;IAUgBrB,IAAI,EAAC,QAAQ;IAAE4B,OAAK,EAAAxB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAsB,UAAA,IAAAtB,QAAA,CAAAsB,UAAA,IAAAvB,IAAA,CAAU;KAAmB,QAAM,KAVzEwB,mBAAA,e,4BAYW5B,mBAAA,CAMA,c,kBALHD,mBAAA,CAIKgB,SAAA,QAjBbC,WAAA,CAa+BR,KAAA,CAAAqB,SAAS,EAArBX,QAAQ;yBAAnBnB,mBAAA,CAIK;MAJ8BoB,GAAG,EAAED,QAAQ,CAACY;QAbzDC,gBAAA,CAAAP,gBAAA,CAcaN,QAAQ,CAACR,IAAI,IAAG,KAAG,GAAAc,gBAAA,CAAGN,QAAQ,CAACL,WAAW,IAAG,KAAG,GAAAW,gBAAA,CAAGN,QAAQ,CAACJ,QAAQ,IAAG,GAC1E,iBAAAd,mBAAA,CAA6D;MAApD0B,OAAK,EAAAnB,MAAA,IAAEF,QAAA,CAAA2B,cAAc,CAACd,QAAQ,CAACY,GAAG;OAAG,QAAM,iBAf9DG,UAAA,GAgBUjC,mBAAA,CAAqD;MAA5C0B,OAAK,EAAAnB,MAAA,IAAEF,QAAA,CAAA6B,YAAY,CAAChB,QAAQ;OAAG,MAAI,iBAhBtDiB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}