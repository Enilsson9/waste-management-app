{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"data-table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Type\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  class: \"form-buttons\"\n};\nconst _hoisted_9 = {\n  type: \"submit\",\n  class: \"btn submit-btn\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"modal\"\n};\nconst _hoisted_11 = {\n  class: \"modal-content\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this customer?\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer._id,\n      class: \"data-item\"\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.type), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_4, [_createElementVNode(\"button\", {\n      class: \"btn edit-btn\",\n      onClick: $event => $options.editCustomer(customer)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      class: \"btn delete-btn\",\n      onClick: $event => $options.confirmDeleteCustomer(customer)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Toggle Add New Customer Button \"), !$data.showForm ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn add-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleForm(true))\n  }, \"Add New Customer\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Customer Form \"), $data.showForm ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 1,\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"data-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCustomer.name = $event),\n    placeholder: \"Name\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.name]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newCustomer.customerType = $event),\n    required: \"\",\n    class: \"input-field\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customerTypes, customerType => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customerType,\n      value: customerType\n    }, _toDisplayString(customerType), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.newCustomer.customerType]]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", _hoisted_9, _toDisplayString($data.isEditing ? 'Update' : 'Add') + \" Customer\", 1 /* TEXT */), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args)),\n    class: \"btn cancel-btn\"\n  }, \"Cancel\")) : _createCommentVNode(\"v-if\", true)])], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Delete Confirmation Modal \"), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"btn confirm-delete-btn\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.deleteCustomer && $options.deleteCustomer(...args))\n  }, \"Yes, Delete\"), _createElementVNode(\"button\", {\n    class: \"btn cancel-btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.closeDeleteModal && $options.closeDeleteModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","customers","customer","_id","_toDisplayString","name","_hoisted_4","onClick","$event","$options","editCustomer","_hoisted_5","confirmDeleteCustomer","_hoisted_6","_createCommentVNode","showForm","_cache","toggleForm","onSubmit","_withModifiers","args","submitForm","newCustomer","placeholder","required","customerType","customerTypes","value","_hoisted_7","_hoisted_8","_hoisted_9","isEditing","cancelEdit","showDeleteModal","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","deleteCustomer","closeDeleteModal"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Type</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"customer in customers\" :key=\"customer._id\" class=\"data-item\">\n          <td>{{ customer.name }}</td>\n          <td>{{ customer.type }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editCustomer(customer)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteCustomer(customer)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Toggle Add New Customer Button -->\n    <button v-if=\"!showForm\" class=\"btn add-btn\" @click=\"toggleForm(true)\">Add New Customer</button>\n\n    <!-- Customer Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"data-form\">\n      <input v-model=\"newCustomer.name\" placeholder=\"Name\" required class=\"input-field\">\n      <select v-model=\"newCustomer.customerType\" required class=\"input-field\">\n        <option v-for=\"customerType in customerTypes\" :key=\"customerType\" :value=\"customerType\">\n          {{ customerType }}\n        </option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} Customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this customer?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteCustomer\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: '',\n        customerType: ''\n      },\n      customerTypes: ['internal', 'wholesale', 'public'],\n      showForm: false,\n      showDeleteModal: false,\n      deleteCustomerId: null,\n      isEditing: false,\n      editCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        console.log('Fetched customers:', response.data); // Debugging log\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateCustomer();\n      } else {\n        await this.createCustomer();\n      }\n    },\n    async createCustomer() {\n      try {\n        const response = await api.createCustomer(this.newCustomer);\n        this.customers.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating customer:', error);\n      }\n    },\n    async updateCustomer() {\n      try {\n        const response = await api.updateCustomer(this.editCustomerId, this.newCustomer);\n        const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n        if (index !== -1) {\n          this.customers.splice(index, 1, response.data);\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating customer:', error);\n      }\n    },\n    async deleteCustomer() {\n      try {\n        await api.deleteCustomer(this.deleteCustomerId);\n        this.customers = this.customers.filter(customer => customer._id !== this.deleteCustomerId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    confirmDeleteCustomer(customer) {\n      this.showDeleteModal = true;\n      this.deleteCustomerId = customer._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteCustomerId = null;\n    },\n    editCustomer(customer) {\n      this.newCustomer = { ...customer };\n      this.editCustomerId = customer._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.newCustomer = {\n        name: '',\n        customerType: ''\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};\n</script>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}