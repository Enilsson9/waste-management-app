{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [{\n        id: 1,\n        name: 'Regular'\n      }, {\n        id: 2,\n        name: 'Business'\n      }, {\n        id: 3,\n        name: 'Premium'\n      }, {\n        id: 4,\n        name: 'Internal'\n      }],\n      isEditing: false,\n      editCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    async updateCustomer() {\n      try {\n        if (this.isEditing) {\n          // Update existing customer\n          await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n          const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n          if (index !== -1) {\n            this.customers.splice(index, 1, {\n              ...this.currentCustomer,\n              _id: this.editCustomerId\n            });\n          }\n        } else {\n          // Create new customer\n          const response = await api.createCustomer(this.currentCustomer);\n          this.customers.push(response.data);\n        }\n        this.resetCustomerForm();\n      } catch (error) {\n        console.error('Error updating/creating customer:', error);\n      }\n    },\n    async deleteCustomer(id) {\n      try {\n        await api.deleteCustomer(id);\n        this.customers = this.customers.filter(customer => customer._id !== id);\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.editCustomerId = customer._id;\n      this.currentCustomer = {\n        ...customer\n      };\n    },\n    cancelEdit() {\n      this.resetCustomerForm();\n    },\n    resetCustomerForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      this.currentCustomer = {\n        name: '',\n        description: '',\n        category: ''\n      };\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};","map":{"version":3,"names":["api","data","customers","currentCustomer","name","description","category","customerTypes","id","isEditing","editCustomerId","methods","fetchCustomers","response","getAllCustomers","error","console","updateCustomer","index","findIndex","customer","_id","splice","createCustomer","push","resetCustomerForm","deleteCustomer","filter","editCustomer","cancelEdit","created"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerEdit.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"customer in customers\" :key=\"customer._id\">\n          {{ customer.name }} - {{ customer.description }} - {{ customer.category }}\n          <button @click=\"deleteCustomer(customer._id)\">Delete</button>\n          <button @click=\"editCustomer(customer)\">Edit</button>\n        </li>\n      </ul>\n      <form @submit.prevent=\"updateCustomer\">\n        <input v-model=\"currentCustomer.name\" placeholder=\"Name\" required>\n        <input v-model=\"currentCustomer.description\" placeholder=\"Description\" required>\n        <select v-model=\"currentCustomer.category\">\n          <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.name\">{{ customer.name }}</option>\n        </select>\n        <button type=\"submit\">{{ isEditing ? 'Update' : 'Add' }} customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\">Cancel</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import api from '@/services/api';\n  \n  export default {\n    data() {\n      return {\n        customers: [],\n        currentCustomer: {\n          name: '',\n          description: '',\n          category: ''\n        },\n        customerTypes: [\n          { id: 1, name: 'Regular' },\n          { id: 2, name: 'Business' },\n          { id: 3, name: 'Premium' },\n          { id: 4, name: 'Internal' }\n        ],\n        isEditing: false,\n        editCustomerId: null\n      };\n    },\n    methods: {\n      async fetchCustomers() {\n        try {\n          const response = await api.getAllCustomers();\n          this.customers = response.data;\n        } catch (error) {\n          console.error('Error fetching customers:', error);\n        }\n      },\n      async updateCustomer() {\n        try {\n          if (this.isEditing) {\n            // Update existing customer\n            await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n            const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n            if (index !== -1) {\n              this.customers.splice(index, 1, { ...this.currentCustomer, _id: this.editCustomerId });\n            }\n          } else {\n            // Create new customer\n            const response = await api.createCustomer(this.currentCustomer);\n            this.customers.push(response.data);\n          }\n          this.resetCustomerForm();\n        } catch (error) {\n          console.error('Error updating/creating customer:', error);\n        }\n      },\n      async deleteCustomer(id) {\n        try {\n          await api.deleteCustomer(id);\n          this.customers = this.customers.filter(customer => customer._id !== id);\n        } catch (error) {\n          console.error('Error deleting customer:', error);\n        }\n      },\n      editCustomer(customer) {\n        this.isEditing = true;\n        this.editCustomerId = customer._id;\n        this.currentCustomer = { ...customer };\n      },\n      cancelEdit() {\n        this.resetCustomerForm();\n      },\n      resetCustomerForm() {\n        this.isEditing = false;\n        this.editCustomerId = null;\n        this.currentCustomer = { name: '', description: '', category: '' };\n      }\n    },\n    created() {\n      this.fetchCustomers();\n    }\n  };\n  </script>\n  "],"mappings":";AAsBE,OAAOA,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,eAAe,EAAE;QACfC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC;MACDC,aAAa,EAAE,CACb;QAAEC,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAU,CAAC,EAC1B;QAAEI,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAW,CAAC,EAC3B;QAAEI,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAU,CAAC,EAC1B;QAAEI,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAW,EAC3B;MACDK,SAAS,EAAE,KAAK;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,GAAG,CAACc,eAAe,CAAC,CAAC;QAC5C,IAAI,CAACZ,SAAQ,GAAIW,QAAQ,CAACZ,IAAI;MAChC,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAME,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,IAAI,CAACR,SAAS,EAAE;UAClB;UACA,MAAMT,GAAG,CAACiB,cAAc,CAAC,IAAI,CAACP,cAAc,EAAE,IAAI,CAACP,eAAe,CAAC;UACnE,MAAMe,KAAI,GAAI,IAAI,CAAChB,SAAS,CAACiB,SAAS,CAACC,QAAO,IAAKA,QAAQ,CAACC,GAAE,KAAM,IAAI,CAACX,cAAc,CAAC;UACxF,IAAIQ,KAAI,KAAM,CAAC,CAAC,EAAE;YAChB,IAAI,CAAChB,SAAS,CAACoB,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAE;cAAE,GAAG,IAAI,CAACf,eAAe;cAAEkB,GAAG,EAAE,IAAI,CAACX;YAAe,CAAC,CAAC;UACxF;QACF,OAAO;UACL;UACA,MAAMG,QAAO,GAAI,MAAMb,GAAG,CAACuB,cAAc,CAAC,IAAI,CAACpB,eAAe,CAAC;UAC/D,IAAI,CAACD,SAAS,CAACsB,IAAI,CAACX,QAAQ,CAACZ,IAAI,CAAC;QACpC;QACA,IAAI,CAACwB,iBAAiB,CAAC,CAAC;MAC1B,EAAE,OAAOV,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IACD,MAAMW,cAAcA,CAAClB,EAAE,EAAE;MACvB,IAAI;QACF,MAAMR,GAAG,CAAC0B,cAAc,CAAClB,EAAE,CAAC;QAC5B,IAAI,CAACN,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACyB,MAAM,CAACP,QAAO,IAAKA,QAAQ,CAACC,GAAE,KAAMb,EAAE,CAAC;MACzE,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDa,YAAYA,CAACR,QAAQ,EAAE;MACrB,IAAI,CAACX,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,cAAa,GAAIU,QAAQ,CAACC,GAAG;MAClC,IAAI,CAAClB,eAAc,GAAI;QAAE,GAAGiB;MAAS,CAAC;IACxC,CAAC;IACDS,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,iBAAiB,CAAC,CAAC;IAC1B,CAAC;IACDA,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAChB,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACC,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACP,eAAc,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;IACpE;EACF,CAAC;EACDwB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}