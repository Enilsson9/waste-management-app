{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [{\n        id: 1,\n        name: 'Regular'\n      }, {\n        id: 2,\n        name: 'Business'\n      }, {\n        id: 3,\n        name: 'Premium'\n      }, {\n        id: 4,\n        name: 'Internal'\n      }]\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAll();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    async createCustomer() {\n      try {\n        const response = await api.create(this.newcustomer);\n        this.customers.push(response.data);\n        this.newcustomer = {\n          name: '',\n          description: '',\n          quantity: 0\n        };\n      } catch (error) {\n        console.error('Error creating customer:', error);\n      }\n    },\n    async deleteCustomer(id) {\n      try {\n        await api.delete(id);\n        this.customers = this.customers.filter(customer => customer._id !== id);\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};","map":{"version":3,"names":["api","data","customers","newCustomer","name","description","category","customerTypes","id","methods","fetchCustomers","response","getAll","error","console","createCustomer","create","newcustomer","push","quantity","deleteCustomer","delete","filter","customer","_id","created"],"sources":["/home/edward/summer-project/frontend/src/components/customerForm.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"customer in customers\" :key=\"customer._id\">\n          {{ customer.name }} - {{ customer.description }} - {{ customer.category }}\n          <button @click=\"deleteCustomer(customer._id)\">Delete</button>\n        </li>\n      </ul>\n      <form @submit.prevent=\"createcustomer\">\n        <input v-model=\"newCustomer.name\" placeholder=\"Name\" required>\n        <input v-model=\"newCustomer.description\" placeholder=\"Description\" required>\n        <input v-model=\"newCustomer.category\" placeholder=\"Category\" required>\n\n        <select v-model=\"newCustomer.category\" id=\"customerCategory\">\n        <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.id\">{{ customer.name }}</option>\n        </select>\n\n        <button type=\"submit\">Add customer</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import api from '@/services/api';\n  \n  export default {\n    data() {\n      return {\n        customers: [],\n        newCustomer: {\n          name: '',\n          description: '',\n          category: ''\n        },\n        customerTypes: [\n        { id: 1, name: 'Regular' },\n        { id: 2, name: 'Business' },\n        { id: 3, name: 'Premium' },\n        { id: 4, name: 'Internal' },\n      ]\n      };\n    },\n    methods: {\n      async fetchCustomers() {\n        try {\n          const response = await api.getAll();\n          this.customers = response.data;\n        } catch (error) {\n          console.error('Error fetching customers:', error);\n        }\n      },\n      async createCustomer() {\n        try {\n          const response = await api.create(this.newcustomer);\n          this.customers.push(response.data);\n          this.newcustomer = { name: '', description: '', quantity: 0 };\n        } catch (error) {\n          console.error('Error creating customer:', error);\n        }\n      },\n      async deleteCustomer(id) {\n        try {\n          await api.delete(id);\n          this.customers = this.customers.filter(customer => customer._id !== id);\n        } catch (error) {\n          console.error('Error deleting customer:', error);\n        }\n      }\n    },\n    created() {\n      this.fetchCustomers();\n    }\n  };\n  </script>\n  "],"mappings":";AAuBE,OAAOA,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC;MACDC,aAAa,EAAE,CACf;QAAEC,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAU,CAAC,EAC1B;QAAEI,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAW,CAAC,EAC3B;QAAEI,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAU,CAAC,EAC1B;QAAEI,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE;MAAW,CAAC;IAE7B,CAAC;EACH,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,GAAG,CAACY,MAAM,CAAC,CAAC;QACnC,IAAI,CAACV,SAAQ,GAAIS,QAAQ,CAACV,IAAI;MAChC,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAME,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMX,GAAG,CAACgB,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC;QACnD,IAAI,CAACf,SAAS,CAACgB,IAAI,CAACP,QAAQ,CAACV,IAAI,CAAC;QAClC,IAAI,CAACgB,WAAU,GAAI;UAAEb,IAAI,EAAE,EAAE;UAAEC,WAAW,EAAE,EAAE;UAAEc,QAAQ,EAAE;QAAE,CAAC;MAC/D,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD,MAAMO,cAAcA,CAACZ,EAAE,EAAE;MACvB,IAAI;QACF,MAAMR,GAAG,CAACqB,MAAM,CAACb,EAAE,CAAC;QACpB,IAAI,CAACN,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACoB,MAAM,CAACC,QAAO,IAAKA,QAAQ,CAACC,GAAE,KAAMhB,EAAE,CAAC;MACzE,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}