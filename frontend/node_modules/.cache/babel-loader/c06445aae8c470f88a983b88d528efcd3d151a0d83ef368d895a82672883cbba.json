{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Order Types\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"data-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Type of Waste\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Weight\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Created At\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  class: \"form-buttons\"\n};\nconst _hoisted_11 = {\n  type: \"submit\",\n  class: \"btn submit-btn\"\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"modal\"\n};\nconst _hoisted_13 = {\n  class: \"modal-content\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this order?\", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order._id,\n      class: \"data-item\"\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.typeOfWaste), 1 /* TEXT */), _createElementVNode(\"td\", null, [order._id !== $data.editingOrderId ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString(order.weight), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => order.weight = $event,\n      type: \"number\",\n      placeholder: \"Weight\",\n      required: \"\",\n      class: \"input-field\"\n    }, null, 8 /* PROPS */, _hoisted_5)), [[_vModelText, order.weight, void 0, {\n      number: true\n    }]])]), _createElementVNode(\"td\", null, _toDisplayString(order.createdAt), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_6, [order._id !== $data.editingOrderId ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn edit-btn\",\n      onClick: $event => $options.editOrder(order)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      class: \"btn delete-btn\",\n      onClick: $event => $options.confirmDeleteOrder(order)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_8)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Toggle Add New Order Button \"), !$data.showForm ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn add-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleForm(true))\n  }, \"Add New Order\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Order Form \"), $data.showForm ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 1,\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"data-form\"\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newOrder.typeOfWaste = $event),\n    required: \"\",\n    class: \"input-field\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.wasteTypes, waste => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: waste.id,\n      value: waste.name\n    }, _toDisplayString(waste.name), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.newOrder.typeOfWaste]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newOrder.weight = $event),\n    type: \"number\",\n    placeholder: \"Weight\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newOrder.weight, void 0, {\n    number: true\n  }]]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", _hoisted_11, _toDisplayString($data.isEditing ? 'Update' : 'Add') + \" Order\", 1 /* TEXT */), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args)),\n    class: \"btn cancel-btn\"\n  }, \"Cancel\")) : _createCommentVNode(\"v-if\", true)])], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Delete Confirmation Modal \"), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n    class: \"btn confirm-delete-btn\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.deleteOrder && $options.deleteOrder(...args))\n  }, \"Yes, Delete\"), _createElementVNode(\"button\", {\n    class: \"btn cancel-btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.closeDeleteModal && $options.closeDeleteModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","orders","order","_id","_toDisplayString","typeOfWaste","editingOrderId","_createTextVNode","weight","$event","placeholder","required","_hoisted_5","number","createdAt","_hoisted_6","onClick","$options","editOrder","_hoisted_7","_createCommentVNode","confirmDeleteOrder","_hoisted_8","showForm","_cache","toggleForm","onSubmit","_withModifiers","args","submitForm","newOrder","wasteTypes","waste","id","value","name","_hoisted_9","_hoisted_10","_hoisted_11","isEditing","cancelEdit","showDeleteModal","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","deleteOrder","closeDeleteModal"],"sources":["/home/edward/summer-project/frontend/src/components/forms/orderForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Order Types</h1>\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Type of Waste</th>\n          <th>Weight</th>\n          <th>Created At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order._id\" class=\"data-item\">\n          <td>\n            \n              {{ order.typeOfWaste }}\n        \n\n      \n      \n          </td>\n          <td>\n            <template v-if=\"order._id !== editingOrderId\">\n              {{ order.weight }}\n            </template>\n            <template v-else>\n              <input v-model.number=\"order.weight\" type=\"number\" placeholder=\"Weight\" required class=\"input-field\">\n            </template>\n          </td>\n          <td>{{ order.createdAt }}</td>\n          <td class=\"action-buttons\">\n            <template v-if=\"order._id !== editingOrderId\">\n              <button class=\"btn edit-btn\" @click=\"editOrder(order)\">Edit</button>\n            </template>\n            \n            <button class=\"btn delete-btn\" @click=\"confirmDeleteOrder(order)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Toggle Add New Order Button -->\n    <button v-if=\"!showForm\" class=\"btn add-btn\" @click=\"toggleForm(true)\">Add New Order</button>\n\n    <!-- Order Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"data-form\">\n      <select v-model=\"newOrder.typeOfWaste\" required class=\"input-field\">\n        <option v-for=\"waste in wasteTypes\" :key=\"waste.id\" :value=\"waste.name\">{{ waste.name }}</option>\n      </select>\n      <input v-model.number=\"newOrder.weight\" type=\"number\" placeholder=\"Weight\" required class=\"input-field\">\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} Order</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this order?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteOrder\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      orders: [],\n      newOrder: {\n        typeOfWaste: '',\n        weight: ''\n      },\n      wasteTypes: [\n        { id: 1, name: 'Plastic' },\n        { id: 2, name: 'Metal' },\n        { id: 3, name: 'Cardboard' },\n        { id: 4, name: 'Bronze' },\n      ],\n      showForm: false,\n      showDeleteModal: false,\n      deleteOrderId: null,\n      isEditing: false,\n      editingOrderId: null\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    fetchOrders() {\n      api.getAllOrders()\n        .then(response => {\n          this.orders = response.data;\n        })\n        .catch(error => {\n          console.error(\"Error fetching orders:\", error);\n        });\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateOrder();\n      } else {\n        await this.addOrder();\n      }\n    },\n    async addOrder() {\n      try {\n        const response = await api.addOrder(this.newOrder);\n        this.orders.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error adding order:\", error);\n      }\n    },\n    async updateOrder() {\n      try {\n        await api.updateOrder(this.editOrderId, this.newOrder);\n        const index = this.orders.findIndex(order => order._id === this.editOrderId);\n        if (index !== -1) {\n          this.orders.splice(index, 1, { ...this.newOrder, _id: this.editOrderId });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating order:', error);\n      }\n    },\n    async deleteOrder() {\n      try {\n        await api.deleteOrder(this.deleteOrderId);\n        this.orders = this.orders.filter(order => order._id !== this.deleteOrderId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error(\"Error deleting order:\", error);\n      }\n    },\n    confirmDeleteOrder(order) {\n      this.showDeleteModal = true;\n      this.deleteOrderId = order._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteOrderId = null;\n    },\n    editOrder(order) {\n      this.newOrder = { ...order };\n      this.editingOrderId = order._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.newOrder = {\n        typeOfWaste: '',\n        weight: ''\n      };\n      this.isEditing = false;\n      this.editingOrderId = null;\n      this.showForm = false;\n    }\n  }\n};\n</script>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}