{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: 'App',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const isLoginPage = ref(route.path === '/');\n    const isAuthenticated = ref(!!localStorage.getItem('authToken')); // Check if user is authenticated\n    const userRole = ref(localStorage.getItem('userRole')); // Retrieve role from localStorage\n\n    // Watch for changes in the route and update isLoginPage\n    watch(() => route.path, newPath => {\n      isLoginPage.value = newPath === '/';\n    });\n\n    // On mounted, ensure userRole and authentication status are updated\n    onMounted(() => {\n      isAuthenticated.value = !!localStorage.getItem('authToken');\n      userRole.value = localStorage.getItem('userRole');\n      console.log('User role on mount:', userRole.value); // Debugging\n    });\n\n    // Watch for changes in localStorage to update authentication status and userRole\n    watch(() => localStorage.getItem('authToken'), newToken => {\n      isAuthenticated.value = !!newToken;\n    }, {\n      immediate: true\n    });\n    watch(() => localStorage.getItem('userRole'), newRole => {\n      userRole.value = newRole;\n    }, {\n      immediate: true\n    });\n\n    // Check if the user has access to a specific role(s)\n    function hasAccess(...roles) {\n      console.log('Checking access for:', roles);\n      console.log('Current User Role:', userRole.value); // Ensure role is correctly accessed\n      return roles.includes(userRole.value); // Check if the role is in the allowed roles\n    }\n\n    // Logout method\n    function logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      isAuthenticated.value = false; // Update local state\n      userRole.value = null; // Update local state\n      router.push('/');\n    }\n    return {\n      isLoginPage,\n      isAuthenticated,\n      hasAccess,\n      logout\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","useRoute","useRouter","name","setup","route","router","isLoginPage","path","isAuthenticated","localStorage","getItem","userRole","newPath","value","console","log","newToken","immediate","newRole","hasAccess","roles","includes","logout","removeItem","push"],"sources":["/home/edward/summer-project/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header v-if=\"!isLoginPage && isAuthenticated\" class=\"navbar\">\n      <h1 class=\"logo\">Waste Management App</h1>\n      <nav class=\"nav-links\">\n        <router-link to=\"/orders\" class=\"nav-link\" :class=\"{ 'no-access': !hasAccess('admin', 'cashier', 'weigher') }\">Orders</router-link>\n        <router-link to=\"/invoices\" class=\"nav-link\" :class=\"{ 'no-access': !hasAccess('admin', 'cashier') }\">Invoices</router-link>\n        <router-link to=\"/waste\" class=\"nav-link\" :class=\"{ 'no-access': !hasAccess('admin') }\">Waste</router-link>\n        <router-link to=\"/customers\" class=\"nav-link\" :class=\"{ 'no-access': !hasAccess('admin') }\">Customers</router-link>\n        <button @click=\"logout\" class=\"logout-button\">Logout</button>\n      </nav>\n    </header>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { ref, watch, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default {\n  name: 'App',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const isLoginPage = ref(route.path === '/');\n    const isAuthenticated = ref(!!localStorage.getItem('authToken')); // Check if user is authenticated\n    const userRole = ref(localStorage.getItem('userRole')); // Retrieve role from localStorage\n\n    // Watch for changes in the route and update isLoginPage\n    watch(() => route.path, (newPath) => {\n      isLoginPage.value = newPath === '/';\n    });\n\n    // On mounted, ensure userRole and authentication status are updated\n    onMounted(() => {\n      isAuthenticated.value = !!localStorage.getItem('authToken');\n      userRole.value = localStorage.getItem('userRole');\n      console.log('User role on mount:', userRole.value); // Debugging\n    });\n\n    // Watch for changes in localStorage to update authentication status and userRole\n    watch(() => localStorage.getItem('authToken'), (newToken) => {\n      isAuthenticated.value = !!newToken;\n    }, { immediate: true });\n\n    watch(() => localStorage.getItem('userRole'), (newRole) => {\n      userRole.value = newRole;\n    }, { immediate: true });\n\n    // Check if the user has access to a specific role(s)\n    function hasAccess(...roles) {\n      console.log('Checking access for:', roles);\n      console.log('Current User Role:', userRole.value); // Ensure role is correctly accessed\n      return roles.includes(userRole.value); // Check if the role is in the allowed roles\n    }\n\n    // Logout method\n    function logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      isAuthenticated.value = false; // Update local state\n      userRole.value = null; // Update local state\n      router.push('/');\n    }\n\n    return { isLoginPage, isAuthenticated, hasAccess, logout };\n  }\n}\n</script>\n\n<style scoped>\n/* Scoped styles to apply only to this component */\n\n\n#app {\n  font-family: 'Arial', sans-serif;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n\n.navbar {\n  background-color: #f8f9fa;\n  padding: 10px 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  font-size: 1.8rem;\n  margin: 0;\n  color: #333;\n}\n\n.nav-links {\n  display: flex;\n}\n\n.nav-link {\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n  padding: 10px;\n  margin: 0 10px;\n  transition: color 0.3s;\n}\n\n.nav-link:hover {\n  color: #42b983;\n}\n\n.active {\n  color: #42b983;\n}\n\n.logout-button {\n  /* Your logout button styles */\n  background-color: #f56c6c; /* Example style */\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n.logout-button:hover {\n  background-color: #f44336; /* Example hover style */\n}\n\n\n\n.nav-link.no-access {\n  color: red;\n  cursor: not-allowed;\n  position: relative;\n}\n\n.nav-link.no-access::after {\n  content: ' (No Access)';\n  font-size: 0.8em;\n  color: red;\n  position: absolute;\n  right: 0;\n}\n</style>\n"],"mappings":";AAiBA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAQ,QAAS,KAAK;AAC3C,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAEhD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,WAAU,GAAIT,GAAG,CAACO,KAAK,CAACG,IAAG,KAAM,GAAG,CAAC;IAC3C,MAAMC,eAAc,GAAIX,GAAG,CAAC,CAAC,CAACY,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE;IAClE,MAAMC,QAAO,GAAId,GAAG,CAACY,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;;IAExD;IACAZ,KAAK,CAAC,MAAMM,KAAK,CAACG,IAAI,EAAGK,OAAO,IAAK;MACnCN,WAAW,CAACO,KAAI,GAAID,OAAM,KAAM,GAAG;IACrC,CAAC,CAAC;;IAEF;IACAb,SAAS,CAAC,MAAM;MACdS,eAAe,CAACK,KAAI,GAAI,CAAC,CAACJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC3DC,QAAQ,CAACE,KAAI,GAAIJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACjDI,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,QAAQ,CAACE,KAAK,CAAC,EAAE;IACtD,CAAC,CAAC;;IAEF;IACAf,KAAK,CAAC,MAAMW,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAGM,QAAQ,IAAK;MAC3DR,eAAe,CAACK,KAAI,GAAI,CAAC,CAACG,QAAQ;IACpC,CAAC,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAEvBnB,KAAK,CAAC,MAAMW,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAGQ,OAAO,IAAK;MACzDP,QAAQ,CAACE,KAAI,GAAIK,OAAO;IAC1B,CAAC,EAAE;MAAED,SAAS,EAAE;IAAK,CAAC,CAAC;;IAEvB;IACA,SAASE,SAASA,CAAC,GAAGC,KAAK,EAAE;MAC3BN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,KAAK,CAAC;MAC1CN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACE,KAAK,CAAC,EAAE;MACnD,OAAOO,KAAK,CAACC,QAAQ,CAACV,QAAQ,CAACE,KAAK,CAAC,EAAE;IACzC;;IAEA;IACA,SAASS,MAAMA,CAAA,EAAG;MAChBb,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC;MACpCd,YAAY,CAACc,UAAU,CAAC,UAAU,CAAC;MACnCf,eAAe,CAACK,KAAI,GAAI,KAAK,EAAE;MAC/BF,QAAQ,CAACE,KAAI,GAAI,IAAI,EAAE;MACvBR,MAAM,CAACmB,IAAI,CAAC,GAAG,CAAC;IAClB;IAEA,OAAO;MAAElB,WAAW;MAAEE,eAAe;MAAEW,SAAS;MAAEG;IAAO,CAAC;EAC5D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}