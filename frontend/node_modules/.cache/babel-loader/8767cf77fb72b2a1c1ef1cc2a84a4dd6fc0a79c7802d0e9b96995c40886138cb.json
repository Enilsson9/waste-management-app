{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/services/api';\nexport default {\n  data() {\n    return {\n      invoices: [],\n      orders: [],\n      newInvoice: {\n        orderId: '',\n        paymentMethod: '',\n        status: 'unpaid'\n      },\n      showForm: false,\n      showDeleteModal: false,\n      deleteInvoiceId: null,\n      isEditing: false,\n      editInvoiceId: null\n    };\n  },\n  created() {\n    this.fetchInvoices();\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchInvoices() {\n      try {\n        const response = await api.getAllInvoices();\n        this.invoices = response.data;\n      } catch (error) {\n        console.error('Error fetching invoices:', error);\n      }\n    },\n    async fetchOrders() {\n      try {\n        const response = await api.getAllOrders();\n        this.orders = response.data;\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateInvoice();\n      } else {\n        await this.createInvoice();\n      }\n    },\n    async createInvoice() {\n      try {\n        const response = await api.createInvoice(this.newInvoice);\n        this.invoices.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating invoice:', error);\n      }\n    },\n    async updateInvoice() {\n      try {\n        const response = await api.updateInvoice(this.editInvoiceId, this.newInvoice);\n        const index = this.invoices.findIndex(invoice => invoice._id === this.editInvoiceId);\n        if (index !== -1) {\n          this.invoices.splice(index, 1, response.data);\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating invoice:', error);\n      }\n    },\n    async deleteInvoice() {\n      try {\n        await api.deleteInvoice(this.deleteInvoiceId);\n        this.invoices = this.invoices.filter(invoice => invoice._id !== this.deleteInvoiceId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting invoice:', error);\n      }\n    },\n    confirmDeleteInvoice(invoice) {\n      this.showDeleteModal = true;\n      this.deleteInvoiceId = invoice._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteInvoiceId = null;\n    },\n    editInvoice(invoice) {\n      this.newInvoice = {\n        orderId: invoice.orderId._id,\n        paymentMethod: invoice.paymentMethod,\n        status: invoice.status\n      };\n      this.editInvoiceId = invoice._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.newInvoice = {\n        orderId: '',\n        paymentMethod: '',\n        status: 'unpaid'\n      };\n      this.isEditing = false;\n      this.editInvoiceId = null;\n      this.showForm = false;\n    }\n  }\n};","map":{"version":3,"names":["api","data","invoices","orders","newInvoice","orderId","paymentMethod","status","showForm","showDeleteModal","deleteInvoiceId","isEditing","editInvoiceId","created","fetchInvoices","fetchOrders","methods","response","getAllInvoices","error","console","getAllOrders","toggleForm","show","resetForm","submitForm","updateInvoice","createInvoice","push","index","findIndex","invoice","_id","splice","deleteInvoice","filter","closeDeleteModal","confirmDeleteInvoice","editInvoice","cancelEdit"],"sources":["/home/edward/summer-project/frontend/src/components/forms/invoiceForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Invoice ID</th>\n          <th>Order ID</th>\n          <th>Customer</th>\n          <th>Total Price</th>\n          <th>Payment Method</th>\n          <th>Status</th>\n          <th>Created At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"invoice in invoices\" :key=\"invoice._id\" class=\"data-item\">\n          <td>{{ invoice.invoiceId }}</td>\n          <td>{{ invoice.orderId ? invoice.orderId.orderId : 'N/A' }}</td>\n          <td>{{ invoice.orderId && invoice.orderId.customer ? invoice.orderId.customer.name : 'N/A' }}</td>\n          <td>{{ invoice.orderId ? invoice.orderId.totalPrice : 'N/A' }}</td>\n          <td>{{ invoice.paymentMethod }}</td>\n          <td>{{ invoice.status }}</td>\n          <td>{{ new Date(invoice.timestamp).toLocaleString() }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editInvoice(invoice)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteInvoice(invoice)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Toggle Add New Invoice Button -->\n    <button v-if=\"!showForm\" class=\"btn add-btn\" @click=\"toggleForm(true)\">Add New Invoice</button>\n\n    <!-- Invoice Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"data-form\">\n      <select v-model=\"newInvoice.orderId\" required class=\"input-field\">\n        <option value=\"\" disabled>Select Order</option>\n        <option v-for=\"order in orders\" :key=\"order._id\" :value=\"order._id\">{{ order.orderId }}</option>\n      </select>\n      <select v-model=\"newInvoice.paymentMethod\" required class=\"input-field\">\n        <option value=\"\" disabled>Select Payment Method</option>\n        <option value=\"cash\">Cash</option>\n        <option value=\"credit_card\">Credit Card</option>\n        <option value=\"bank_transfer\">Bank Transfer</option>\n        <option value=\"mobile_payment\">Mobile Payment</option>\n      </select>\n      <select v-model=\"newInvoice.status\" required class=\"input-field\">\n        <option value=\"paid\">Paid</option>\n        <option value=\"unpaid\">Unpaid</option>\n        <option value=\"cancelled\">Cancelled</option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} Invoice</button>\n        <button type=\"button\" @click=\"cancelEdit\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this invoice?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteInvoice\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      invoices: [],\n      orders: [],\n      newInvoice: {\n        orderId: '',\n        paymentMethod: '',\n        status: 'unpaid'\n      },\n      showForm: false,\n      showDeleteModal: false,\n      deleteInvoiceId: null,\n      isEditing: false,\n      editInvoiceId: null\n    };\n  },\n  created() {\n    this.fetchInvoices();\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchInvoices() {\n      try {\n        const response = await api.getAllInvoices();\n        this.invoices = response.data;\n      } catch (error) {\n        console.error('Error fetching invoices:', error);\n      }\n    },\n    async fetchOrders() {\n      try {\n        const response = await api.getAllOrders();\n        this.orders = response.data;\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateInvoice();\n      } else {\n        await this.createInvoice();\n      }\n    },\n    async createInvoice() {\n      try {\n        const response = await api.createInvoice(this.newInvoice);\n        this.invoices.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating invoice:', error);\n      }\n    },\n    async updateInvoice() {\n      try {\n        const response = await api.updateInvoice(this.editInvoiceId, this.newInvoice);\n        const index = this.invoices.findIndex(invoice => invoice._id === this.editInvoiceId);\n        if (index !== -1) {\n          this.invoices.splice(index, 1, response.data);\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating invoice:', error);\n      }\n    },\n    async deleteInvoice() {\n      try {\n        await api.deleteInvoice(this.deleteInvoiceId);\n        this.invoices = this.invoices.filter(invoice => invoice._id !== this.deleteInvoiceId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting invoice:', error);\n      }\n    },\n    confirmDeleteInvoice(invoice) {\n      this.showDeleteModal = true;\n      this.deleteInvoiceId = invoice._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteInvoiceId = null;\n    },\n    editInvoice(invoice) {\n      this.newInvoice = {\n        orderId: invoice.orderId._id,\n        paymentMethod: invoice.paymentMethod,\n        status: invoice.status\n      };\n      this.editInvoiceId = invoice._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.newInvoice = {\n        orderId: '',\n        paymentMethod: '',\n        status: 'unpaid'\n      };\n      this.isEditing = false;\n      this.editInvoiceId = null;\n      this.showForm = false;\n    }\n  }\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}