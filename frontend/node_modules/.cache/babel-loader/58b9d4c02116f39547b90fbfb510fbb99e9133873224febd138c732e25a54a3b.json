{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: 'App',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const isLoginPage = ref(route.path === '/');\n    const userRole = ref(localStorage.getItem('userRole')); // Get user role from localStorage\n\n    // Watch for changes in the route and update isLoginPage\n    watch(() => route.path, newPath => {\n      isLoginPage.value = newPath === '/';\n    });\n\n    // Watch for changes in localStorage to update userRole\n    watch(() => localStorage.getItem('userRole'), newRole => {\n      userRole.value = newRole;\n    });\n\n    // Check if the user has access to a specific role(s)\n    function hasAccess(...roles) {\n      return roles.includes(userRole.value);\n    }\n\n    // Logout method\n    function logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      router.push('/');\n    }\n    return {\n      isLoginPage,\n      hasAccess,\n      logout\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","useRoute","useRouter","name","setup","route","router","isLoginPage","path","userRole","localStorage","getItem","newPath","value","newRole","hasAccess","roles","includes","logout","removeItem","push"],"sources":["/home/edward/summer-project/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header v-if=\"!isLoginPage\" class=\"navbar\">\n      <h1 class=\"logo\">Waste Management App</h1>\n      <nav class=\"nav-links\">\n        <router-link v-if=\"hasAccess('admin')\" to=\"/waste\" class=\"nav-link\" active-class=\"active\">Waste</router-link>\n        <router-link v-if=\"hasAccess('admin', 'cashier', 'weigher')\" to=\"/orders\" class=\"nav-link\" active-class=\"active\">Orders</router-link>\n        <router-link v-if=\"hasAccess('admin', 'cashier')\" to=\"/invoices\" class=\"nav-link\" active-class=\"active\">Invoices</router-link>\n        <router-link v-if=\"hasAccess('admin')\" to=\"/customers\" class=\"nav-link\" active-class=\"active\">Customers</router-link>\n        <button @click=\"logout\" class=\"logout-button\">Logout</button>\n      </nav>\n    </header>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default {\n  name: 'App',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const isLoginPage = ref(route.path === '/');\n    const userRole = ref(localStorage.getItem('userRole')); // Get user role from localStorage\n\n    // Watch for changes in the route and update isLoginPage\n    watch(() => route.path, (newPath) => {\n      isLoginPage.value = newPath === '/';\n    });\n\n    // Watch for changes in localStorage to update userRole\n    watch(() => localStorage.getItem('userRole'), (newRole) => {\n      userRole.value = newRole;\n    });\n\n    // Check if the user has access to a specific role(s)\n    function hasAccess(...roles) {\n      return roles.includes(userRole.value);\n    }\n\n    // Logout method\n    function logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      router.push('/');\n    }\n\n    return { isLoginPage, hasAccess, logout };\n  }\n}\n</script>\n\n<style scoped>\n/* Scoped styles to apply only to this component */\n#app {\n  font-family: 'Arial', sans-serif;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n\n.navbar {\n  background-color: #f8f9fa;\n  padding: 10px 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  font-size: 1.8rem;\n  margin: 0;\n  color: #333;\n}\n\n.nav-links {\n  display: flex;\n}\n\n.nav-link {\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n  padding: 10px;\n  margin: 0 10px;\n  transition: color 0.3s;\n}\n\n.nav-link:hover {\n  color: #42b983;\n}\n\n.active {\n  color: #42b983;\n}\n\n.logout-button {\n  /* Your logout button styles */\n  background-color: #f56c6c; /* Example style */\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n.logout-button:hover {\n  background-color: #f44336; /* Example hover style */\n}\n</style>\n"],"mappings":";AAiBA,SAASA,GAAG,EAAEC,KAAI,QAAS,KAAK;AAChC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAEhD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,WAAU,GAAIR,GAAG,CAACM,KAAK,CAACG,IAAG,KAAM,GAAG,CAAC;IAC3C,MAAMC,QAAO,GAAIV,GAAG,CAACW,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;;IAExD;IACAX,KAAK,CAAC,MAAMK,KAAK,CAACG,IAAI,EAAGI,OAAO,IAAK;MACnCL,WAAW,CAACM,KAAI,GAAID,OAAM,KAAM,GAAG;IACrC,CAAC,CAAC;;IAEF;IACAZ,KAAK,CAAC,MAAMU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAGG,OAAO,IAAK;MACzDL,QAAQ,CAACI,KAAI,GAAIC,OAAO;IAC1B,CAAC,CAAC;;IAEF;IACA,SAASC,SAASA,CAAC,GAAGC,KAAK,EAAE;MAC3B,OAAOA,KAAK,CAACC,QAAQ,CAACR,QAAQ,CAACI,KAAK,CAAC;IACvC;;IAEA;IACA,SAASK,MAAMA,CAAA,EAAG;MAChBR,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;MACpCT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;MACnCb,MAAM,CAACc,IAAI,CAAC,GAAG,CAAC;IAClB;IAEA,OAAO;MAAEb,WAAW;MAAEQ,SAAS;MAAEG;IAAO,CAAC;EAC3C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}