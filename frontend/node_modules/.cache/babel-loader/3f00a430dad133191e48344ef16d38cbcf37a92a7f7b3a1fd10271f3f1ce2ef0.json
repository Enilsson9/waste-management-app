{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"data-table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Description\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Category\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  class: \"form-buttons\"\n};\nconst _hoisted_9 = {\n  type: \"submit\",\n  class: \"btn submit-btn\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"modal\"\n};\nconst _hoisted_11 = {\n  class: \"modal-content\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this customer?\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer._id,\n      class: \"data-item\"\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.description), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.category), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_4, [_createElementVNode(\"button\", {\n      class: \"btn edit-btn\",\n      onClick: $event => $options.editCustomer(customer)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      class: \"btn delete-btn\",\n      onClick: $event => $options.confirmDeleteCustomer(customer)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Toggle Add New Customer Button \"), !$data.showForm ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn add-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleForm(true))\n  }, \"Add New Customer\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Customer Form \"), $data.showForm ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 1,\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"data-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCustomer.name = $event),\n    placeholder: \"Name\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newCustomer.description = $event),\n    placeholder: \"Description\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.description]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newCustomer.category = $event),\n    class: \"input-field\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customerTypes, customerType => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customerType.id,\n      value: customerType.name\n    }, _toDisplayString(customerType.name), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.newCustomer.category]]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", _hoisted_9, _toDisplayString($data.isEditing ? 'Update' : 'Add') + \" Customer\", 1 /* TEXT */), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancelEdit && $options.cancelEdit(...args)),\n    class: \"btn cancel-btn\"\n  }, \"Cancel\")) : _createCommentVNode(\"v-if\", true)])], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Delete Confirmation Modal \"), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"btn confirm-delete-btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.deleteCustomer && $options.deleteCustomer(...args))\n  }, \"Yes, Delete\"), _createElementVNode(\"button\", {\n    class: \"btn cancel-btn\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeDeleteModal && $options.closeDeleteModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","customers","customer","_id","_toDisplayString","name","description","category","_hoisted_4","onClick","$event","$options","editCustomer","_hoisted_5","confirmDeleteCustomer","_hoisted_6","_createCommentVNode","showForm","_cache","toggleForm","onSubmit","_withModifiers","args","submitForm","newCustomer","placeholder","required","customerTypes","customerType","id","value","_hoisted_7","_hoisted_8","_hoisted_9","isEditing","cancelEdit","showDeleteModal","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","deleteCustomer","closeDeleteModal"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Category</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"customer in customers\" :key=\"customer._id\" class=\"data-item\">\n          <td>{{ customer.name }}</td>\n          <td>{{ customer.description }}</td>\n          <td>{{ customer.category }}</td>\n          <td class=\"action-buttons\">\n            <button class=\"btn edit-btn\" @click=\"editCustomer(customer)\">Edit</button>\n            <button class=\"btn delete-btn\" @click=\"confirmDeleteCustomer(customer)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Toggle Add New Customer Button -->\n    <button v-if=\"!showForm\" class=\"btn add-btn\" @click=\"toggleForm(true)\">Add New Customer</button>\n\n    <!-- Customer Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"data-form\">\n      <input v-model=\"newCustomer.name\" placeholder=\"Name\" required class=\"input-field\">\n      <input v-model=\"newCustomer.description\" placeholder=\"Description\" required class=\"input-field\">\n      <select v-model=\"newCustomer.category\" class=\"input-field\">\n        <option v-for=\"customerType in customerTypes\" :key=\"customerType.id\" :value=\"customerType.name\">\n          {{ customerType.name }}\n        </option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} Customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete this customer?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteCustomer\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [\n        { id: 1, name: 'Regular' },\n        { id: 2, name: 'Business' },\n        { id: 3, name: 'Premium' },\n        { id: 4, name: 'Internal' }\n      ],\n      showForm: false,\n      showDeleteModal: false,\n      deleteCustomerId: null,\n      isEditing: false,\n      editCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    toggleForm(show) {\n      this.showForm = show;\n      if (!show) {\n        this.resetForm();\n      }\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        await this.updateCustomer();\n      } else {\n        await this.createCustomer();\n      }\n    },\n    async createCustomer() {\n      try {\n        const response = await api.createCustomer(this.newCustomer);\n        this.customers.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating customer:', error);\n      }\n    },\n    async updateCustomer() {\n      try {\n        await api.updateCustomer(this.editCustomerId, this.newCustomer);\n        const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n        if (index !== -1) {\n          this.customers.splice(index, 1, { ...this.newCustomer, _id: this.editCustomerId });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating customer:', error);\n      }\n    },\n    async deleteCustomer() {\n      try {\n        await api.deleteCustomer(this.deleteCustomerId);\n        this.customers = this.customers.filter(customer => customer._id !== this.deleteCustomerId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    confirmDeleteCustomer(customer) {\n      this.showDeleteModal = true;\n      this.deleteCustomerId = customer._id;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteCustomerId = null;\n    },\n    editCustomer(customer) {\n      this.newCustomer = { ...customer };\n      this.editCustomerId = customer._id;\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.newCustomer = {\n        name: '',\n        description: '',\n        category: ''\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}