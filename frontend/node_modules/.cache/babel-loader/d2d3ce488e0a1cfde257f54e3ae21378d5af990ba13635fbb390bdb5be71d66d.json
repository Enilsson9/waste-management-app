{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  class: \"form-buttons\"\n};\nconst _hoisted_4 = {\n  type: \"submit\",\n  class: \"btn submit-btn\"\n};\nconst _hoisted_5 = {\n  class: \"customer-list\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_9 = {\n  class: \"modal-content\"\n};\nconst _hoisted_10 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Add Customer Button \"), _createElementVNode(\"button\", {\n    class: \"btn add-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addNewCustomer && $options.addNewCustomer(...args))\n  }, \"Add New Customer\"), _createCommentVNode(\" Customer Form \"), $data.showForm ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"customer-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.currentCustomer.name = $event),\n    placeholder: \"Name\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.currentCustomer.description = $event),\n    placeholder: \"Description\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.description]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.currentCustomer.category = $event),\n    class: \"input-field\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customerTypes, customer => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customer.id,\n      value: customer.name\n    }, _toDisplayString(customer.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.currentCustomer.category]]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", _hoisted_4, _toDisplayString($data.isEditing ? 'Update' : 'Add') + \" customer\", 1 /* TEXT */), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancelEdit && $options.cancelEdit(...args)),\n    class: \"btn cancel-btn\"\n  }, \"Cancel\")) : _createCommentVNode(\"v-if\", true)])], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: customer._id,\n      class: \"customer-item\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(customer.description), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(customer.category), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn delete-btn\",\n      onClick: $event => $options.confirmDeleteCustomer(customer)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      class: \"btn edit-btn\",\n      onClick: $event => $options.editCustomer(customer)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Delete Confirmation Modal \"), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, \"Are you sure you want to delete \" + _toDisplayString($data.currentCustomer.name) + \"?\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"btn confirm-delete-btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.deleteCustomer && $options.deleteCustomer(...args))\n  }, \"Yes, Delete\"), _createElementVNode(\"button\", {\n    class: \"btn cancel-btn\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeDeleteModal && $options.closeDeleteModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","type","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","addNewCustomer","$data","showForm","onSubmit","_withModifiers","submitForm","$event","currentCustomer","name","placeholder","required","description","category","_Fragment","_renderList","customerTypes","customer","id","value","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","isEditing","cancelEdit","_hoisted_5","customers","_id","confirmDeleteCustomer","_hoisted_6","editCustomer","_hoisted_7","showDeleteModal","_hoisted_8","_hoisted_9","_hoisted_10","deleteCustomer","closeDeleteModal"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- Add Customer Button -->\n    <button class=\"btn add-btn\" @click=\"addNewCustomer\">Add New Customer</button>\n\n    <!-- Customer Form -->\n    <form v-if=\"showForm\" @submit.prevent=\"submitForm\" class=\"customer-form\">\n      <input v-model=\"currentCustomer.name\" placeholder=\"Name\" required class=\"input-field\">\n      <input v-model=\"currentCustomer.description\" placeholder=\"Description\" required class=\"input-field\">\n      <select v-model=\"currentCustomer.category\" class=\"input-field\">\n        <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.name\">{{ customer.name }}</option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n    <ul class=\"customer-list\">\n      <li v-for=\"customer in customers\" :key=\"customer._id\" class=\"customer-item\">\n        <span>{{ customer.name }}</span>\n        <span>{{ customer.description }}</span>\n        <span>{{ customer.category }}</span>\n        <button class=\"btn delete-btn\" @click=\"confirmDeleteCustomer(customer)\">Delete</button>\n        <button class=\"btn edit-btn\" @click=\"editCustomer(customer)\">Edit</button>\n      </li>\n    </ul>\n\n\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <p>Are you sure you want to delete {{ currentCustomer.name }}?</p>\n        <div class=\"modal-buttons\">\n          <button class=\"btn confirm-delete-btn\" @click=\"deleteCustomer\">Yes, Delete</button>\n          <button class=\"btn cancel-btn\" @click=\"closeDeleteModal\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [\n        { id: 1, name: 'Regular' },\n        { id: 2, name: 'Business' },\n        { id: 3, name: 'Premium' },\n        { id: 4, name: 'Internal' }\n      ],\n      isEditing: false,\n      editCustomerId: null,\n      showForm: false,\n      showDeleteModal: false,\n      deleteCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    addNewCustomer() {\n      this.showForm = true;\n      this.isEditing = false;\n      this.currentCustomer = { name: '', description: '', category: '' };\n    },\n    async submitForm() {\n      if (this.isEditing) {\n        console.log(\"fml\");\n        await this.updateCustomer();\n      } else {\n        console.log(this.currentCustomer);\n        await this.createCustomer();\n      }\n    },\n    async updateCustomer() {\n      try {\n        await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n        const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n        if (index !== -1) {\n          this.customers.splice(index, 1, { ...this.currentCustomer, _id: this.editCustomerId });\n        }\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating customer:', error);\n      }\n    },\n    async createCustomer() {\n      try {\n        const response = await api.createCustomer(this.currentCustomer);\n        this.customers.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error creating customer:', error);\n      }\n    },\n    async deleteCustomer() {\n      try {\n        await api.deleteCustomer(this.deleteCustomerId);\n        this.customers = this.customers.filter(customer => customer._id !== this.deleteCustomerId);\n        this.closeDeleteModal();\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    confirmDeleteCustomer(customer) {\n      this.showDeleteModal = true;\n      this.deleteCustomerId = customer._id;\n      this.currentCustomer = { ...customer };\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.deleteCustomerId = null;\n      this.resetForm();\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.showForm = true;\n      this.editCustomerId = customer._id;\n      // Copy customer details to currentCustomer\n      this.currentCustomer = { ...customer };\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      // Reset currentCustomer to default values\n      this.currentCustomer = {\n        name: '',\n        description: '',\n        category: ''\n      };\n      this.showForm = false;\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};\n</script>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}