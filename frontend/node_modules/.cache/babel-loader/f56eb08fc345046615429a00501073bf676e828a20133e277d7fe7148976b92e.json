{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Waste\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.wastes, waste => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: waste._id\n    }, [_createTextVNode(_toDisplayString(waste.name) + \" - \" + _toDisplayString(waste.description) + \" - \" + _toDisplayString(waste.quantity) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteWaste(waste._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.createWaste && $options.createWaste(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newWaste.name = $event),\n    placeholder: \"Name\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newWaste.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newWaste.description = $event),\n    placeholder: \"Description\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newWaste.description]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newWaste.quantity = $event),\n    type: \"number\",\n    placeholder: \"Quantity\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newWaste.quantity]]), _hoisted_2], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_Fragment","_renderList","$data","wastes","waste","key","_id","_createTextVNode","_toDisplayString","name","description","quantity","onClick","$event","$options","deleteWaste","_hoisted_1","onSubmit","_cache","_withModifiers","args","createWaste","newWaste","placeholder","required","_hoisted_2"],"sources":["/home/edward/summer-project/frontend/src/components/forms/WasteForm.vue"],"sourcesContent":["<template>\n    <div>\n      <ul>\n        <li v-for=\"waste in wastes\" :key=\"waste._id\">\n          {{ waste.name }} - {{ waste.description }} - {{ waste.quantity }}\n          <button @click=\"deleteWaste(waste._id)\">Delete</button>\n        </li>\n      </ul>\n      <form @submit.prevent=\"createWaste\">\n        <input v-model=\"newWaste.name\" placeholder=\"Name\" required>\n        <input v-model=\"newWaste.description\" placeholder=\"Description\" required>\n        <input v-model=\"newWaste.quantity\" type=\"number\" placeholder=\"Quantity\" required>\n        <button type=\"submit\">Add Waste</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import api from '@/services/api';\n  \n  export default {\n    data() {\n      return {\n        wastes: [],\n        newWaste: {\n          name: '',\n          description: '',\n          quantity: 0\n        }\n      };\n    },\n    methods: {\n      async fetchWastes() {\n        try {\n          const response = await api.getAll();\n          this.wastes = response.data;\n        } catch (error) {\n          console.error('Error fetching wastes:', error);\n        }\n      },\n      async createWaste() {\n        try {\n          const response = await api.create(this.newWaste);\n          this.wastes.push(response.data);\n          this.newWaste = { name: '', description: '', quantity: 0 };\n        } catch (error) {\n          console.error('Error creating waste:', error);\n        }\n      },\n      async deleteWaste(id) {\n        try {\n          await api.delete(id);\n          this.wastes = this.wastes.filter(waste => waste._id !== id);\n        } catch (error) {\n          console.error('Error deleting waste:', error);\n        }\n      }\n    },\n    created() {\n      this.fetchWastes();\n    }\n  };\n  </script>\n  "],"mappings":";mBAAA;gCAYQA,mBAAA,CAAwC;EAAhCC,IAAI,EAAC;AAAQ,GAAC,WAAS;;uBAXnCC,mBAAA,CAaM,cAZJF,mBAAA,CAKK,c,kBAJHE,mBAAA,CAGKC,SAAA,QANbC,WAAA,CAG4BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBL,mBAAA,CAGK;MAHwBM,GAAG,EAAED,KAAK,CAACE;QAHhDC,gBAAA,CAAAC,gBAAA,CAIaJ,KAAK,CAACK,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGJ,KAAK,CAACM,WAAW,IAAG,KAAG,GAAAF,gBAAA,CAAGJ,KAAK,CAACO,QAAQ,IAAG,GACjE,iBAAAd,mBAAA,CAAuD;MAA9Ce,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACX,KAAK,CAACE,GAAG;OAAG,QAAM,iBALxDU,UAAA,E;oCAQMnB,mBAAA,CAKO;IALAoB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MARnBC,cAAA,KAAAC,IAAA,KAQ6BN,QAAA,CAAAO,WAAA,IAAAP,QAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;sBAChCvB,mBAAA,CAA2D;IATnE,uBAAAqB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IASwBX,KAAA,CAAAoB,QAAQ,CAACb,IAAI,GAAAI,MAAA;IAAEU,WAAW,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAlCtB,KAAA,CAAAoB,QAAQ,CAACb,IAAI,E,mBAC7BZ,mBAAA,CAAyE;IAVjF,uBAAAqB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAUwBX,KAAA,CAAAoB,QAAQ,CAACZ,WAAW,GAAAG,MAAA;IAAEU,WAAW,EAAC,aAAa;IAACC,QAAQ,EAAR;iDAAhDtB,KAAA,CAAAoB,QAAQ,CAACZ,WAAW,E,mBACpCb,mBAAA,CAAiF;IAXzF,uBAAAqB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAWwBX,KAAA,CAAAoB,QAAQ,CAACX,QAAQ,GAAAE,MAAA;IAAEf,IAAI,EAAC,QAAQ;IAACyB,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAxDtB,KAAA,CAAAoB,QAAQ,CAACX,QAAQ,E,GACjCc,UAAwC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}