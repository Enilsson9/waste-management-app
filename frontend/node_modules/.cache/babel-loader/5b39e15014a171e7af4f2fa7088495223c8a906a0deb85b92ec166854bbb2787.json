{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c000ef8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"customer-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"form-buttons\"\n};\nconst _hoisted_7 = {\n  type: \"submit\",\n  class: \"btn submit-btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: customer._id,\n      class: \"customer-item\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(customer.description), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(customer.category), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn delete-btn\",\n      onClick: $event => $options.deleteCustomer(customer._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      class: \"btn edit-btn\",\n      onClick: $event => $options.editCustomer(customer)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.updateCustomer && $options.updateCustomer(...args), [\"prevent\"])),\n    class: \"customer-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentCustomer.name = $event),\n    placeholder: \"Name\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.currentCustomer.description = $event),\n    placeholder: \"Description\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.description]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.currentCustomer.category = $event),\n    class: \"input-field\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customerTypes, customer => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customer.id,\n      value: customer.name\n    }, _toDisplayString(customer.name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.currentCustomer.category]]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", _hoisted_7, _toDisplayString($data.isEditing ? 'Update' : 'Add') + \" customer\", 1 /* TEXT */), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args)),\n    class: \"btn cancel-btn\"\n  }, \"Cancel\")) : _createCommentVNode(\"v-if\", true)])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","type","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","customers","customer","key","_id","_toDisplayString","name","description","category","onClick","$event","$options","deleteCustomer","_hoisted_3","editCustomer","_hoisted_4","onSubmit","_cache","_withModifiers","args","updateCustomer","currentCustomer","placeholder","required","customerTypes","id","value","_hoisted_5","_hoisted_6","_hoisted_7","isEditing","cancelEdit","_createCommentVNode"],"sources":["/home/edward/summer-project/frontend/src/components/forms/customerEdit.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <ul class=\"customer-list\">\n      <li v-for=\"customer in customers\" :key=\"customer._id\" class=\"customer-item\">\n        <span>{{ customer.name }}</span>\n        <span>{{ customer.description }}</span>\n        <span>{{ customer.category }}</span>\n        <button class=\"btn delete-btn\" @click=\"deleteCustomer(customer._id)\">Delete</button>\n        <button class=\"btn edit-btn\" @click=\"editCustomer(customer)\">Edit</button>\n      </li>\n    </ul>\n    <form @submit.prevent=\"updateCustomer\" class=\"customer-form\">\n      <input v-model=\"currentCustomer.name\" placeholder=\"Name\" required class=\"input-field\">\n      <input v-model=\"currentCustomer.description\" placeholder=\"Description\" required class=\"input-field\">\n      <select v-model=\"currentCustomer.category\" class=\"input-field\">\n        <option v-for=\"customer in customerTypes\" :key=\"customer.id\" :value=\"customer.name\">{{ customer.name }}</option>\n      </select>\n      <div class=\"form-buttons\">\n        <button type=\"submit\" class=\"btn submit-btn\">{{ isEditing ? 'Update' : 'Add' }} customer</button>\n        <button type=\"button\" @click=\"cancelEdit\" v-if=\"isEditing\" class=\"btn cancel-btn\">Cancel</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport api from '@/services/api';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        _id: '',\n        name: '',\n        description: '',\n        category: ''\n      },\n      customerTypes: [\n        { id: 1, name: 'Regular' },\n        { id: 2, name: 'Business' },\n        { id: 3, name: 'Premium' },\n        { id: 4, name: 'Internal' }\n      ],\n      isEditing: false,\n      editCustomerId: null\n    };\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await api.getAllCustomers();\n        this.customers = response.data;\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    },\n    async updateCustomer() {\n      try {\n        if (this.isEditing) {\n          await api.updateCustomer(this.editCustomerId, this.currentCustomer);\n          const index = this.customers.findIndex(customer => customer._id === this.editCustomerId);\n          if (index !== -1) {\n            this.customers.splice(index, 1, { ...this.currentCustomer, _id: this.editCustomerId });\n          }\n        } else {\n          const response = await api.createCustomer(this.currentCustomer);\n          this.customers.push(response.data);\n        }\n        this.resetCustomerForm();\n      } catch (error) {\n        console.error('Error updating/creating customer:', error);\n      }\n    },\n    async deleteCustomer(id) {\n      try {\n        await api.deleteCustomer(id);\n        this.customers = this.customers.filter(customer => customer._id !== id);\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    },\n    editCustomer(customer) {\n      this.isEditing = true;\n      this.editCustomerId = customer._id;\n      this.currentCustomer = { ...customer };\n    },\n    cancelEdit() {\n      this.resetCustomerForm();\n    },\n    resetCustomerForm() {\n      this.isEditing = false;\n      this.editCustomerId = null;\n      this.currentCustomer = { name: '', description: '', category: '' };\n    }\n  },\n  created() {\n    this.fetchCustomers();\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.customer-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.customer-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  background-color: #f9f9f9;\n}\n\n.customer-item span {\n  flex: 1;\n  margin: 0 5px;\n}\n\n.customer-item .btn {\n  margin-left: 10px;\n}\n\n.customer-form {\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n}\n\n.input-field {\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  width: 100%;\n}\n\n.form-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.btn {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.delete-btn {\n  background-color: #e74c3c;\n  color: white;\n}\n\n.edit-btn {\n  background-color: #3498db;\n  color: white;\n}\n\n.submit-btn {\n  background-color: #2ecc71;\n  color: white;\n  flex: 1;\n}\n\n.cancel-btn {\n  background-color: #e67e22;\n  color: white;\n  margin-left: 10px;\n}\n\n.btn:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}